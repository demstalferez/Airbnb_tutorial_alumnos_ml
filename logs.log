2023-06-23 13:52:01,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 13:52:01,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 13:52:01,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 13:52:01,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 13:52:02,329:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-23 13:52:50,952:INFO:PyCaret RegressionExperiment
2023-06-23 13:52:50,952:INFO:Logging name: reg-default-name
2023-06-23 13:52:50,952:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-23 13:52:50,952:INFO:version 3.0.2
2023-06-23 13:52:50,953:INFO:Initializing setup()
2023-06-23 13:52:50,953:INFO:self.USI: 54a6
2023-06-23 13:52:50,953:INFO:self._variable_keys: {'y_train', 'y', 'memory', '_ml_usecase', 'exp_id', 'y_test', 'transform_target_param', 'gpu_param', 'pipeline', 'target_param', 'html_param', 'seed', '_available_plots', 'X', 'USI', 'log_plots_param', 'n_jobs_param', 'X_train', 'fold_shuffle_param', 'data', 'X_test', 'fold_generator', 'logging_param', 'exp_name_log', 'fold_groups_param', 'idx', 'gpu_n_jobs_param'}
2023-06-23 13:52:50,953:INFO:Checking environment
2023-06-23 13:52:50,953:INFO:python_version: 3.10.6
2023-06-23 13:52:50,953:INFO:python_build: ('main', 'May 29 2023 11:10:38')
2023-06-23 13:52:50,953:INFO:machine: x86_64
2023-06-23 13:52:50,953:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-06-23 13:52:50,953:INFO:Memory: svmem(total=7949160448, available=2300874752, percent=71.1, used=4520722432, free=344223744, active=1998254080, inactive=4742938624, buffers=179564544, cached=2904649728, shared=810831872, slab=450850816)
2023-06-23 13:52:50,954:INFO:Physical Core: 4
2023-06-23 13:52:50,954:INFO:Logical Core: 8
2023-06-23 13:52:50,954:INFO:Checking libraries
2023-06-23 13:52:50,954:INFO:System:
2023-06-23 13:52:50,954:INFO:    python: 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0]
2023-06-23 13:52:50,954:INFO:executable: /bin/python3
2023-06-23 13:52:50,954:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-06-23 13:52:50,954:INFO:PyCaret required dependencies:
2023-06-23 13:52:50,954:INFO:                 pip: 22.0.2
2023-06-23 13:52:50,954:INFO:          setuptools: 59.6.0
2023-06-23 13:52:50,954:INFO:             pycaret: 3.0.2
2023-06-23 13:52:50,954:INFO:             IPython: 8.13.2
2023-06-23 13:52:50,954:INFO:          ipywidgets: 8.0.6
2023-06-23 13:52:50,954:INFO:                tqdm: 4.65.0
2023-06-23 13:52:50,954:INFO:               numpy: 1.23.5
2023-06-23 13:52:50,954:INFO:              pandas: 1.5.3
2023-06-23 13:52:50,954:INFO:              jinja2: 3.1.2
2023-06-23 13:52:50,954:INFO:               scipy: 1.10.1
2023-06-23 13:52:50,954:INFO:              joblib: 1.2.0
2023-06-23 13:52:50,954:INFO:             sklearn: 1.2.2
2023-06-23 13:52:50,954:INFO:                pyod: 1.0.9
2023-06-23 13:52:50,954:INFO:            imblearn: 0.10.1
2023-06-23 13:52:50,954:INFO:   category_encoders: 2.6.1
2023-06-23 13:52:50,954:INFO:            lightgbm: 3.3.5
2023-06-23 13:52:50,955:INFO:               numba: 0.57.0
2023-06-23 13:52:50,955:INFO:            requests: 2.25.1
2023-06-23 13:52:50,955:INFO:          matplotlib: 3.7.1
2023-06-23 13:52:50,955:INFO:          scikitplot: 0.3.7
2023-06-23 13:52:50,955:INFO:         yellowbrick: 1.5
2023-06-23 13:52:50,955:INFO:              plotly: 5.14.1
2023-06-23 13:52:50,955:INFO:             kaleido: 0.2.1
2023-06-23 13:52:50,955:INFO:         statsmodels: 0.14.0
2023-06-23 13:52:50,955:INFO:              sktime: 0.17.0
2023-06-23 13:52:50,955:INFO:               tbats: 1.1.3
2023-06-23 13:52:50,955:INFO:            pmdarima: 2.0.3
2023-06-23 13:52:50,955:INFO:              psutil: 5.9.5
2023-06-23 13:52:50,955:INFO:PyCaret optional dependencies:
2023-06-23 13:52:51,743:INFO:                shap: Not installed
2023-06-23 13:52:51,743:INFO:           interpret: Not installed
2023-06-23 13:52:51,743:INFO:                umap: Not installed
2023-06-23 13:52:51,743:INFO:    pandas_profiling: Not installed
2023-06-23 13:52:51,743:INFO:  explainerdashboard: Not installed
2023-06-23 13:52:51,743:INFO:             autoviz: Not installed
2023-06-23 13:52:51,743:INFO:           fairlearn: Not installed
2023-06-23 13:52:51,743:INFO:             xgboost: 1.7.5
2023-06-23 13:52:51,743:INFO:            catboost: Not installed
2023-06-23 13:52:51,744:INFO:              kmodes: Not installed
2023-06-23 13:52:51,744:INFO:             mlxtend: Not installed
2023-06-23 13:52:51,744:INFO:       statsforecast: Not installed
2023-06-23 13:52:51,744:INFO:        tune_sklearn: Not installed
2023-06-23 13:52:51,744:INFO:                 ray: Not installed
2023-06-23 13:52:51,744:INFO:            hyperopt: Not installed
2023-06-23 13:52:51,744:INFO:              optuna: Not installed
2023-06-23 13:52:51,744:INFO:               skopt: Not installed
2023-06-23 13:52:51,744:INFO:              mlflow: Not installed
2023-06-23 13:52:51,744:INFO:              gradio: 3.34.0
2023-06-23 13:52:51,744:INFO:             fastapi: 0.96.0
2023-06-23 13:52:51,744:INFO:             uvicorn: 0.22.0
2023-06-23 13:52:51,744:INFO:              m2cgen: Not installed
2023-06-23 13:52:51,744:INFO:           evidently: Not installed
2023-06-23 13:52:51,744:INFO:               fugue: Not installed
2023-06-23 13:52:51,744:INFO:           streamlit: 1.23.1
2023-06-23 13:52:51,744:INFO:             prophet: Not installed
2023-06-23 13:52:51,744:INFO:None
2023-06-23 13:52:51,744:INFO:Set up data.
2023-06-23 13:52:51,754:INFO:Set up train/test split.
2023-06-23 13:52:51,758:INFO:Set up index.
2023-06-23 13:52:51,758:INFO:Set up folding strategy.
2023-06-23 13:52:51,758:INFO:Assigning column types.
2023-06-23 13:52:51,761:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-23 13:52:51,761:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-23 13:52:51,765:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-23 13:52:51,768:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-23 13:52:51,810:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 13:52:51,843:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 13:52:51,844:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:51,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:51,883:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-23 13:52:51,886:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-23 13:52:51,889:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-23 13:52:51,933:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 13:52:51,964:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 13:52:51,965:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:51,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:51,967:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-23 13:52:51,970:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-23 13:52:51,973:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,013:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,042:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,042:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:52,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:52,047:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,050:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,089:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,119:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,119:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:52,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:52,121:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-23 13:52:52,127:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,170:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,201:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,201:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:52,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:52,209:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,251:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,282:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,283:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:52,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:52,285:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-23 13:52:52,331:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,361:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,362:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:52,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:52,413:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,445:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,446:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:52,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:52,449:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-23 13:52:52,495:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,527:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:52,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:52,577:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 13:52:52,608:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:52,610:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:52,611:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-23 13:52:52,687:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:52,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:52,764:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:52,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:52,766:INFO:Preparing preprocessing pipeline...
2023-06-23 13:52:52,767:INFO:Set up simple imputation.
2023-06-23 13:52:52,769:INFO:Set up encoding of categorical features.
2023-06-23 13:52:52,866:INFO:Finished creating preprocessing pipeline.
2023-06-23 13:52:52,874:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan')))])
2023-06-23 13:52:52,874:INFO:Creating final display dataframe.
2023-06-23 13:52:53,098:INFO:Setup _display_container:                     Description             Value
0                    Session id              4632
1                        Target             price
2                   Target type        Regression
3           Original data shape        (20030, 7)
4        Transformed data shape       (20030, 30)
5   Transformed train set shape       (14021, 30)
6    Transformed test set shape        (6009, 30)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              54a6
2023-06-23 13:52:53,191:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:53,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:53,270:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 13:52:53,272:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 13:52:53,272:INFO:setup() successfully completed in 2.39s...............
2023-06-23 13:53:08,518:INFO:Initializing compare_models()
2023-06-23 13:53:08,519:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-23 13:53:08,519:INFO:Checking exceptions
2023-06-23 13:53:08,522:INFO:Preparing display monitor
2023-06-23 13:53:08,541:INFO:Initializing Linear Regression
2023-06-23 13:53:08,541:INFO:Total runtime is 3.6756197611490884e-06 minutes
2023-06-23 13:53:08,544:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:08,544:INFO:Initializing create_model()
2023-06-23 13:53:08,544:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:08,544:INFO:Checking exceptions
2023-06-23 13:53:08,544:INFO:Importing libraries
2023-06-23 13:53:08,544:INFO:Copying training dataset
2023-06-23 13:53:08,551:INFO:Defining folds
2023-06-23 13:53:08,551:INFO:Declaring metric variables
2023-06-23 13:53:08,556:INFO:Importing untrained model
2023-06-23 13:53:08,559:INFO:Linear Regression Imported successfully
2023-06-23 13:53:08,564:INFO:Starting cross validation
2023-06-23 13:53:08,570:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:11,767:INFO:Calculating mean and std
2023-06-23 13:53:11,774:INFO:Creating metrics dataframe
2023-06-23 13:53:11,832:INFO:Uploading results into container
2023-06-23 13:53:11,833:INFO:Uploading model into container now
2023-06-23 13:53:11,833:INFO:_master_model_container: 1
2023-06-23 13:53:11,833:INFO:_display_container: 2
2023-06-23 13:53:11,834:INFO:LinearRegression(n_jobs=-1)
2023-06-23 13:53:11,834:INFO:create_model() successfully completed......................................
2023-06-23 13:53:11,968:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:11,968:INFO:Creating metrics dataframe
2023-06-23 13:53:11,974:INFO:Initializing Lasso Regression
2023-06-23 13:53:11,974:INFO:Total runtime is 0.05721985896428426 minutes
2023-06-23 13:53:11,976:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:11,977:INFO:Initializing create_model()
2023-06-23 13:53:11,977:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:11,977:INFO:Checking exceptions
2023-06-23 13:53:11,977:INFO:Importing libraries
2023-06-23 13:53:11,977:INFO:Copying training dataset
2023-06-23 13:53:11,982:INFO:Defining folds
2023-06-23 13:53:11,982:INFO:Declaring metric variables
2023-06-23 13:53:11,985:INFO:Importing untrained model
2023-06-23 13:53:11,987:INFO:Lasso Regression Imported successfully
2023-06-23 13:53:11,992:INFO:Starting cross validation
2023-06-23 13:53:11,993:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:12,669:INFO:Calculating mean and std
2023-06-23 13:53:12,670:INFO:Creating metrics dataframe
2023-06-23 13:53:12,740:INFO:Uploading results into container
2023-06-23 13:53:12,741:INFO:Uploading model into container now
2023-06-23 13:53:12,741:INFO:_master_model_container: 2
2023-06-23 13:53:12,741:INFO:_display_container: 2
2023-06-23 13:53:12,741:INFO:Lasso(random_state=4632)
2023-06-23 13:53:12,741:INFO:create_model() successfully completed......................................
2023-06-23 13:53:12,858:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:12,858:INFO:Creating metrics dataframe
2023-06-23 13:53:12,865:INFO:Initializing Ridge Regression
2023-06-23 13:53:12,865:INFO:Total runtime is 0.07207173109054565 minutes
2023-06-23 13:53:12,868:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:12,868:INFO:Initializing create_model()
2023-06-23 13:53:12,868:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:12,868:INFO:Checking exceptions
2023-06-23 13:53:12,868:INFO:Importing libraries
2023-06-23 13:53:12,868:INFO:Copying training dataset
2023-06-23 13:53:12,873:INFO:Defining folds
2023-06-23 13:53:12,874:INFO:Declaring metric variables
2023-06-23 13:53:12,877:INFO:Importing untrained model
2023-06-23 13:53:12,880:INFO:Ridge Regression Imported successfully
2023-06-23 13:53:12,888:INFO:Starting cross validation
2023-06-23 13:53:12,890:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:13,509:INFO:Calculating mean and std
2023-06-23 13:53:13,510:INFO:Creating metrics dataframe
2023-06-23 13:53:13,576:INFO:Uploading results into container
2023-06-23 13:53:13,577:INFO:Uploading model into container now
2023-06-23 13:53:13,577:INFO:_master_model_container: 3
2023-06-23 13:53:13,577:INFO:_display_container: 2
2023-06-23 13:53:13,577:INFO:Ridge(random_state=4632)
2023-06-23 13:53:13,578:INFO:create_model() successfully completed......................................
2023-06-23 13:53:13,682:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:13,682:INFO:Creating metrics dataframe
2023-06-23 13:53:13,689:INFO:Initializing Elastic Net
2023-06-23 13:53:13,689:INFO:Total runtime is 0.08579777479171753 minutes
2023-06-23 13:53:13,691:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:13,691:INFO:Initializing create_model()
2023-06-23 13:53:13,691:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:13,691:INFO:Checking exceptions
2023-06-23 13:53:13,691:INFO:Importing libraries
2023-06-23 13:53:13,691:INFO:Copying training dataset
2023-06-23 13:53:13,696:INFO:Defining folds
2023-06-23 13:53:13,697:INFO:Declaring metric variables
2023-06-23 13:53:13,699:INFO:Importing untrained model
2023-06-23 13:53:13,702:INFO:Elastic Net Imported successfully
2023-06-23 13:53:13,706:INFO:Starting cross validation
2023-06-23 13:53:13,707:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:14,340:INFO:Calculating mean and std
2023-06-23 13:53:14,341:INFO:Creating metrics dataframe
2023-06-23 13:53:14,407:INFO:Uploading results into container
2023-06-23 13:53:14,408:INFO:Uploading model into container now
2023-06-23 13:53:14,409:INFO:_master_model_container: 4
2023-06-23 13:53:14,409:INFO:_display_container: 2
2023-06-23 13:53:14,409:INFO:ElasticNet(random_state=4632)
2023-06-23 13:53:14,409:INFO:create_model() successfully completed......................................
2023-06-23 13:53:14,522:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:14,522:INFO:Creating metrics dataframe
2023-06-23 13:53:14,529:INFO:Initializing Least Angle Regression
2023-06-23 13:53:14,529:INFO:Total runtime is 0.09980388482411703 minutes
2023-06-23 13:53:14,532:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:14,532:INFO:Initializing create_model()
2023-06-23 13:53:14,532:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:14,532:INFO:Checking exceptions
2023-06-23 13:53:14,532:INFO:Importing libraries
2023-06-23 13:53:14,532:INFO:Copying training dataset
2023-06-23 13:53:14,537:INFO:Defining folds
2023-06-23 13:53:14,537:INFO:Declaring metric variables
2023-06-23 13:53:14,540:INFO:Importing untrained model
2023-06-23 13:53:14,542:INFO:Least Angle Regression Imported successfully
2023-06-23 13:53:14,549:INFO:Starting cross validation
2023-06-23 13:53:14,550:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:15,185:INFO:Calculating mean and std
2023-06-23 13:53:15,186:INFO:Creating metrics dataframe
2023-06-23 13:53:15,252:INFO:Uploading results into container
2023-06-23 13:53:15,252:INFO:Uploading model into container now
2023-06-23 13:53:15,253:INFO:_master_model_container: 5
2023-06-23 13:53:15,253:INFO:_display_container: 2
2023-06-23 13:53:15,253:INFO:Lars(random_state=4632)
2023-06-23 13:53:15,253:INFO:create_model() successfully completed......................................
2023-06-23 13:53:15,365:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:15,365:INFO:Creating metrics dataframe
2023-06-23 13:53:15,371:INFO:Initializing Lasso Least Angle Regression
2023-06-23 13:53:15,371:INFO:Total runtime is 0.11384360790252687 minutes
2023-06-23 13:53:15,373:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:15,374:INFO:Initializing create_model()
2023-06-23 13:53:15,374:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:15,374:INFO:Checking exceptions
2023-06-23 13:53:15,374:INFO:Importing libraries
2023-06-23 13:53:15,374:INFO:Copying training dataset
2023-06-23 13:53:15,382:INFO:Defining folds
2023-06-23 13:53:15,382:INFO:Declaring metric variables
2023-06-23 13:53:15,385:INFO:Importing untrained model
2023-06-23 13:53:15,388:INFO:Lasso Least Angle Regression Imported successfully
2023-06-23 13:53:15,394:INFO:Starting cross validation
2023-06-23 13:53:15,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:16,045:INFO:Calculating mean and std
2023-06-23 13:53:16,046:INFO:Creating metrics dataframe
2023-06-23 13:53:16,111:INFO:Uploading results into container
2023-06-23 13:53:16,112:INFO:Uploading model into container now
2023-06-23 13:53:16,112:INFO:_master_model_container: 6
2023-06-23 13:53:16,112:INFO:_display_container: 2
2023-06-23 13:53:16,112:INFO:LassoLars(random_state=4632)
2023-06-23 13:53:16,112:INFO:create_model() successfully completed......................................
2023-06-23 13:53:16,220:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:16,220:INFO:Creating metrics dataframe
2023-06-23 13:53:16,227:INFO:Initializing Orthogonal Matching Pursuit
2023-06-23 13:53:16,227:INFO:Total runtime is 0.1281095663706462 minutes
2023-06-23 13:53:16,230:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:16,230:INFO:Initializing create_model()
2023-06-23 13:53:16,230:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:16,230:INFO:Checking exceptions
2023-06-23 13:53:16,231:INFO:Importing libraries
2023-06-23 13:53:16,231:INFO:Copying training dataset
2023-06-23 13:53:16,235:INFO:Defining folds
2023-06-23 13:53:16,235:INFO:Declaring metric variables
2023-06-23 13:53:16,238:INFO:Importing untrained model
2023-06-23 13:53:16,240:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-23 13:53:16,245:INFO:Starting cross validation
2023-06-23 13:53:16,247:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:16,878:INFO:Calculating mean and std
2023-06-23 13:53:16,879:INFO:Creating metrics dataframe
2023-06-23 13:53:16,948:INFO:Uploading results into container
2023-06-23 13:53:16,948:INFO:Uploading model into container now
2023-06-23 13:53:16,949:INFO:_master_model_container: 7
2023-06-23 13:53:16,949:INFO:_display_container: 2
2023-06-23 13:53:16,949:INFO:OrthogonalMatchingPursuit()
2023-06-23 13:53:16,949:INFO:create_model() successfully completed......................................
2023-06-23 13:53:17,055:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:17,055:INFO:Creating metrics dataframe
2023-06-23 13:53:17,062:INFO:Initializing Bayesian Ridge
2023-06-23 13:53:17,062:INFO:Total runtime is 0.14202716350555422 minutes
2023-06-23 13:53:17,065:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:17,065:INFO:Initializing create_model()
2023-06-23 13:53:17,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:17,065:INFO:Checking exceptions
2023-06-23 13:53:17,065:INFO:Importing libraries
2023-06-23 13:53:17,065:INFO:Copying training dataset
2023-06-23 13:53:17,073:INFO:Defining folds
2023-06-23 13:53:17,073:INFO:Declaring metric variables
2023-06-23 13:53:17,077:INFO:Importing untrained model
2023-06-23 13:53:17,082:INFO:Bayesian Ridge Imported successfully
2023-06-23 13:53:17,089:INFO:Starting cross validation
2023-06-23 13:53:17,091:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:17,737:INFO:Calculating mean and std
2023-06-23 13:53:17,738:INFO:Creating metrics dataframe
2023-06-23 13:53:17,802:INFO:Uploading results into container
2023-06-23 13:53:17,803:INFO:Uploading model into container now
2023-06-23 13:53:17,804:INFO:_master_model_container: 8
2023-06-23 13:53:17,804:INFO:_display_container: 2
2023-06-23 13:53:17,804:INFO:BayesianRidge()
2023-06-23 13:53:17,804:INFO:create_model() successfully completed......................................
2023-06-23 13:53:17,916:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:17,916:INFO:Creating metrics dataframe
2023-06-23 13:53:17,923:INFO:Initializing Passive Aggressive Regressor
2023-06-23 13:53:17,924:INFO:Total runtime is 0.15638027191162113 minutes
2023-06-23 13:53:17,926:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:17,926:INFO:Initializing create_model()
2023-06-23 13:53:17,926:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:17,926:INFO:Checking exceptions
2023-06-23 13:53:17,926:INFO:Importing libraries
2023-06-23 13:53:17,927:INFO:Copying training dataset
2023-06-23 13:53:17,931:INFO:Defining folds
2023-06-23 13:53:17,931:INFO:Declaring metric variables
2023-06-23 13:53:17,934:INFO:Importing untrained model
2023-06-23 13:53:17,937:INFO:Passive Aggressive Regressor Imported successfully
2023-06-23 13:53:17,943:INFO:Starting cross validation
2023-06-23 13:53:17,944:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:18,625:INFO:Calculating mean and std
2023-06-23 13:53:18,626:INFO:Creating metrics dataframe
2023-06-23 13:53:18,692:INFO:Uploading results into container
2023-06-23 13:53:18,692:INFO:Uploading model into container now
2023-06-23 13:53:18,693:INFO:_master_model_container: 9
2023-06-23 13:53:18,693:INFO:_display_container: 2
2023-06-23 13:53:18,693:INFO:PassiveAggressiveRegressor(random_state=4632)
2023-06-23 13:53:18,693:INFO:create_model() successfully completed......................................
2023-06-23 13:53:18,798:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:18,798:INFO:Creating metrics dataframe
2023-06-23 13:53:18,805:INFO:Initializing Huber Regressor
2023-06-23 13:53:18,805:INFO:Total runtime is 0.17107601165771488 minutes
2023-06-23 13:53:18,808:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:18,808:INFO:Initializing create_model()
2023-06-23 13:53:18,808:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:18,808:INFO:Checking exceptions
2023-06-23 13:53:18,808:INFO:Importing libraries
2023-06-23 13:53:18,808:INFO:Copying training dataset
2023-06-23 13:53:18,814:INFO:Defining folds
2023-06-23 13:53:18,814:INFO:Declaring metric variables
2023-06-23 13:53:18,817:INFO:Importing untrained model
2023-06-23 13:53:18,822:INFO:Huber Regressor Imported successfully
2023-06-23 13:53:18,828:INFO:Starting cross validation
2023-06-23 13:53:18,829:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:19,968:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 13:53:20,050:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 13:53:20,075:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 13:53:20,119:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 13:53:20,140:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 13:53:20,166:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 13:53:20,231:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 13:53:20,328:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 13:53:20,769:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 13:53:20,785:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 13:53:20,876:INFO:Calculating mean and std
2023-06-23 13:53:20,877:INFO:Creating metrics dataframe
2023-06-23 13:53:20,947:INFO:Uploading results into container
2023-06-23 13:53:20,947:INFO:Uploading model into container now
2023-06-23 13:53:20,947:INFO:_master_model_container: 10
2023-06-23 13:53:20,947:INFO:_display_container: 2
2023-06-23 13:53:20,948:INFO:HuberRegressor()
2023-06-23 13:53:20,948:INFO:create_model() successfully completed......................................
2023-06-23 13:53:21,057:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:21,057:INFO:Creating metrics dataframe
2023-06-23 13:53:21,064:INFO:Initializing K Neighbors Regressor
2023-06-23 13:53:21,065:INFO:Total runtime is 0.20873103936513268 minutes
2023-06-23 13:53:21,067:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:21,067:INFO:Initializing create_model()
2023-06-23 13:53:21,067:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:21,067:INFO:Checking exceptions
2023-06-23 13:53:21,067:INFO:Importing libraries
2023-06-23 13:53:21,067:INFO:Copying training dataset
2023-06-23 13:53:21,072:INFO:Defining folds
2023-06-23 13:53:21,072:INFO:Declaring metric variables
2023-06-23 13:53:21,076:INFO:Importing untrained model
2023-06-23 13:53:21,079:INFO:K Neighbors Regressor Imported successfully
2023-06-23 13:53:21,084:INFO:Starting cross validation
2023-06-23 13:53:21,085:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:21,969:INFO:Calculating mean and std
2023-06-23 13:53:21,970:INFO:Creating metrics dataframe
2023-06-23 13:53:22,041:INFO:Uploading results into container
2023-06-23 13:53:22,042:INFO:Uploading model into container now
2023-06-23 13:53:22,042:INFO:_master_model_container: 11
2023-06-23 13:53:22,042:INFO:_display_container: 2
2023-06-23 13:53:22,042:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-23 13:53:22,042:INFO:create_model() successfully completed......................................
2023-06-23 13:53:22,156:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:22,156:INFO:Creating metrics dataframe
2023-06-23 13:53:22,164:INFO:Initializing Decision Tree Regressor
2023-06-23 13:53:22,164:INFO:Total runtime is 0.2270513733228048 minutes
2023-06-23 13:53:22,166:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:22,166:INFO:Initializing create_model()
2023-06-23 13:53:22,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:22,166:INFO:Checking exceptions
2023-06-23 13:53:22,166:INFO:Importing libraries
2023-06-23 13:53:22,166:INFO:Copying training dataset
2023-06-23 13:53:22,172:INFO:Defining folds
2023-06-23 13:53:22,172:INFO:Declaring metric variables
2023-06-23 13:53:22,174:INFO:Importing untrained model
2023-06-23 13:53:22,177:INFO:Decision Tree Regressor Imported successfully
2023-06-23 13:53:22,185:INFO:Starting cross validation
2023-06-23 13:53:22,186:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:22,878:INFO:Calculating mean and std
2023-06-23 13:53:22,879:INFO:Creating metrics dataframe
2023-06-23 13:53:22,944:INFO:Uploading results into container
2023-06-23 13:53:22,945:INFO:Uploading model into container now
2023-06-23 13:53:22,945:INFO:_master_model_container: 12
2023-06-23 13:53:22,946:INFO:_display_container: 2
2023-06-23 13:53:22,946:INFO:DecisionTreeRegressor(random_state=4632)
2023-06-23 13:53:22,946:INFO:create_model() successfully completed......................................
2023-06-23 13:53:23,062:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:23,062:INFO:Creating metrics dataframe
2023-06-23 13:53:23,069:INFO:Initializing Random Forest Regressor
2023-06-23 13:53:23,070:INFO:Total runtime is 0.24214824040730798 minutes
2023-06-23 13:53:23,073:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:23,073:INFO:Initializing create_model()
2023-06-23 13:53:23,073:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:23,073:INFO:Checking exceptions
2023-06-23 13:53:23,073:INFO:Importing libraries
2023-06-23 13:53:23,073:INFO:Copying training dataset
2023-06-23 13:53:23,078:INFO:Defining folds
2023-06-23 13:53:23,078:INFO:Declaring metric variables
2023-06-23 13:53:23,081:INFO:Importing untrained model
2023-06-23 13:53:23,083:INFO:Random Forest Regressor Imported successfully
2023-06-23 13:53:23,088:INFO:Starting cross validation
2023-06-23 13:53:23,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:28,673:INFO:Calculating mean and std
2023-06-23 13:53:28,674:INFO:Creating metrics dataframe
2023-06-23 13:53:28,745:INFO:Uploading results into container
2023-06-23 13:53:28,746:INFO:Uploading model into container now
2023-06-23 13:53:28,747:INFO:_master_model_container: 13
2023-06-23 13:53:28,747:INFO:_display_container: 2
2023-06-23 13:53:28,747:INFO:RandomForestRegressor(n_jobs=-1, random_state=4632)
2023-06-23 13:53:28,747:INFO:create_model() successfully completed......................................
2023-06-23 13:53:28,856:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:28,856:INFO:Creating metrics dataframe
2023-06-23 13:53:28,864:INFO:Initializing Extra Trees Regressor
2023-06-23 13:53:28,864:INFO:Total runtime is 0.3387220144271851 minutes
2023-06-23 13:53:28,867:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:28,868:INFO:Initializing create_model()
2023-06-23 13:53:28,868:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:28,868:INFO:Checking exceptions
2023-06-23 13:53:28,868:INFO:Importing libraries
2023-06-23 13:53:28,868:INFO:Copying training dataset
2023-06-23 13:53:28,872:INFO:Defining folds
2023-06-23 13:53:28,873:INFO:Declaring metric variables
2023-06-23 13:53:28,875:INFO:Importing untrained model
2023-06-23 13:53:28,878:INFO:Extra Trees Regressor Imported successfully
2023-06-23 13:53:28,884:INFO:Starting cross validation
2023-06-23 13:53:28,885:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:34,585:INFO:Calculating mean and std
2023-06-23 13:53:34,586:INFO:Creating metrics dataframe
2023-06-23 13:53:34,660:INFO:Uploading results into container
2023-06-23 13:53:34,661:INFO:Uploading model into container now
2023-06-23 13:53:34,661:INFO:_master_model_container: 14
2023-06-23 13:53:34,661:INFO:_display_container: 2
2023-06-23 13:53:34,661:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4632)
2023-06-23 13:53:34,661:INFO:create_model() successfully completed......................................
2023-06-23 13:53:34,770:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:34,770:INFO:Creating metrics dataframe
2023-06-23 13:53:34,777:INFO:Initializing AdaBoost Regressor
2023-06-23 13:53:34,777:INFO:Total runtime is 0.4372759819030762 minutes
2023-06-23 13:53:34,781:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:34,781:INFO:Initializing create_model()
2023-06-23 13:53:34,781:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:34,781:INFO:Checking exceptions
2023-06-23 13:53:34,781:INFO:Importing libraries
2023-06-23 13:53:34,781:INFO:Copying training dataset
2023-06-23 13:53:34,786:INFO:Defining folds
2023-06-23 13:53:34,786:INFO:Declaring metric variables
2023-06-23 13:53:34,788:INFO:Importing untrained model
2023-06-23 13:53:34,792:INFO:AdaBoost Regressor Imported successfully
2023-06-23 13:53:34,797:INFO:Starting cross validation
2023-06-23 13:53:34,799:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:35,817:INFO:Calculating mean and std
2023-06-23 13:53:35,817:INFO:Creating metrics dataframe
2023-06-23 13:53:35,898:INFO:Uploading results into container
2023-06-23 13:53:35,899:INFO:Uploading model into container now
2023-06-23 13:53:35,899:INFO:_master_model_container: 15
2023-06-23 13:53:35,899:INFO:_display_container: 2
2023-06-23 13:53:35,899:INFO:AdaBoostRegressor(random_state=4632)
2023-06-23 13:53:35,899:INFO:create_model() successfully completed......................................
2023-06-23 13:53:36,014:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:36,014:INFO:Creating metrics dataframe
2023-06-23 13:53:36,022:INFO:Initializing Gradient Boosting Regressor
2023-06-23 13:53:36,022:INFO:Total runtime is 0.45802789926528936 minutes
2023-06-23 13:53:36,025:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:36,025:INFO:Initializing create_model()
2023-06-23 13:53:36,025:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:36,025:INFO:Checking exceptions
2023-06-23 13:53:36,025:INFO:Importing libraries
2023-06-23 13:53:36,025:INFO:Copying training dataset
2023-06-23 13:53:36,030:INFO:Defining folds
2023-06-23 13:53:36,030:INFO:Declaring metric variables
2023-06-23 13:53:36,032:INFO:Importing untrained model
2023-06-23 13:53:36,035:INFO:Gradient Boosting Regressor Imported successfully
2023-06-23 13:53:36,040:INFO:Starting cross validation
2023-06-23 13:53:36,041:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:38,462:INFO:Calculating mean and std
2023-06-23 13:53:38,464:INFO:Creating metrics dataframe
2023-06-23 13:53:38,536:INFO:Uploading results into container
2023-06-23 13:53:38,537:INFO:Uploading model into container now
2023-06-23 13:53:38,537:INFO:_master_model_container: 16
2023-06-23 13:53:38,537:INFO:_display_container: 2
2023-06-23 13:53:38,537:INFO:GradientBoostingRegressor(random_state=4632)
2023-06-23 13:53:38,537:INFO:create_model() successfully completed......................................
2023-06-23 13:53:38,645:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:38,645:INFO:Creating metrics dataframe
2023-06-23 13:53:38,654:INFO:Initializing Extreme Gradient Boosting
2023-06-23 13:53:38,654:INFO:Total runtime is 0.5018836379051209 minutes
2023-06-23 13:53:38,656:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:38,657:INFO:Initializing create_model()
2023-06-23 13:53:38,657:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:38,657:INFO:Checking exceptions
2023-06-23 13:53:38,657:INFO:Importing libraries
2023-06-23 13:53:38,657:INFO:Copying training dataset
2023-06-23 13:53:38,661:INFO:Defining folds
2023-06-23 13:53:38,662:INFO:Declaring metric variables
2023-06-23 13:53:38,665:INFO:Importing untrained model
2023-06-23 13:53:38,668:INFO:Extreme Gradient Boosting Imported successfully
2023-06-23 13:53:38,673:INFO:Starting cross validation
2023-06-23 13:53:38,674:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:42,956:INFO:Calculating mean and std
2023-06-23 13:53:42,958:INFO:Creating metrics dataframe
2023-06-23 13:53:43,033:INFO:Uploading results into container
2023-06-23 13:53:43,033:INFO:Uploading model into container now
2023-06-23 13:53:43,034:INFO:_master_model_container: 17
2023-06-23 13:53:43,034:INFO:_display_container: 2
2023-06-23 13:53:43,034:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             predictor=None, random_state=4632, ...)
2023-06-23 13:53:43,034:INFO:create_model() successfully completed......................................
2023-06-23 13:53:43,139:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:43,139:INFO:Creating metrics dataframe
2023-06-23 13:53:43,146:INFO:Initializing Light Gradient Boosting Machine
2023-06-23 13:53:43,147:INFO:Total runtime is 0.5767629027366639 minutes
2023-06-23 13:53:43,149:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:43,149:INFO:Initializing create_model()
2023-06-23 13:53:43,149:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:43,149:INFO:Checking exceptions
2023-06-23 13:53:43,149:INFO:Importing libraries
2023-06-23 13:53:43,149:INFO:Copying training dataset
2023-06-23 13:53:43,154:INFO:Defining folds
2023-06-23 13:53:43,154:INFO:Declaring metric variables
2023-06-23 13:53:43,157:INFO:Importing untrained model
2023-06-23 13:53:43,160:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-23 13:53:43,167:INFO:Starting cross validation
2023-06-23 13:53:43,168:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:44,236:INFO:Calculating mean and std
2023-06-23 13:53:44,237:INFO:Creating metrics dataframe
2023-06-23 13:53:44,324:INFO:Uploading results into container
2023-06-23 13:53:44,325:INFO:Uploading model into container now
2023-06-23 13:53:44,325:INFO:_master_model_container: 18
2023-06-23 13:53:44,326:INFO:_display_container: 2
2023-06-23 13:53:44,326:INFO:LGBMRegressor(random_state=4632)
2023-06-23 13:53:44,326:INFO:create_model() successfully completed......................................
2023-06-23 13:53:44,440:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:44,440:INFO:Creating metrics dataframe
2023-06-23 13:53:44,448:INFO:Initializing Dummy Regressor
2023-06-23 13:53:44,448:INFO:Total runtime is 0.5984605272610982 minutes
2023-06-23 13:53:44,451:INFO:SubProcess create_model() called ==================================
2023-06-23 13:53:44,451:INFO:Initializing create_model()
2023-06-23 13:53:44,451:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3fc8c10820>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:44,451:INFO:Checking exceptions
2023-06-23 13:53:44,451:INFO:Importing libraries
2023-06-23 13:53:44,451:INFO:Copying training dataset
2023-06-23 13:53:44,458:INFO:Defining folds
2023-06-23 13:53:44,459:INFO:Declaring metric variables
2023-06-23 13:53:44,462:INFO:Importing untrained model
2023-06-23 13:53:44,465:INFO:Dummy Regressor Imported successfully
2023-06-23 13:53:44,472:INFO:Starting cross validation
2023-06-23 13:53:44,473:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:53:45,252:INFO:Calculating mean and std
2023-06-23 13:53:45,254:INFO:Creating metrics dataframe
2023-06-23 13:53:45,330:INFO:Uploading results into container
2023-06-23 13:53:45,331:INFO:Uploading model into container now
2023-06-23 13:53:45,331:INFO:_master_model_container: 19
2023-06-23 13:53:45,331:INFO:_display_container: 2
2023-06-23 13:53:45,331:INFO:DummyRegressor()
2023-06-23 13:53:45,331:INFO:create_model() successfully completed......................................
2023-06-23 13:53:45,455:INFO:SubProcess create_model() end ==================================
2023-06-23 13:53:45,455:INFO:Creating metrics dataframe
2023-06-23 13:53:45,472:INFO:Initializing create_model()
2023-06-23 13:53:45,472:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:53:45,472:INFO:Checking exceptions
2023-06-23 13:53:45,474:INFO:Importing libraries
2023-06-23 13:53:45,474:INFO:Copying training dataset
2023-06-23 13:53:45,478:INFO:Defining folds
2023-06-23 13:53:45,478:INFO:Declaring metric variables
2023-06-23 13:53:45,478:INFO:Importing untrained model
2023-06-23 13:53:45,479:INFO:Declaring custom model
2023-06-23 13:53:45,479:INFO:Linear Regression Imported successfully
2023-06-23 13:53:45,480:INFO:Cross validation set to False
2023-06-23 13:53:45,480:INFO:Fitting Model
2023-06-23 13:53:45,711:INFO:LinearRegression(n_jobs=-1)
2023-06-23 13:53:45,711:INFO:create_model() successfully completed......................................
2023-06-23 13:53:45,868:INFO:_master_model_container: 19
2023-06-23 13:53:45,868:INFO:_display_container: 2
2023-06-23 13:53:45,868:INFO:LinearRegression(n_jobs=-1)
2023-06-23 13:53:45,868:INFO:compare_models() successfully completed......................................
2023-06-23 13:54:09,828:INFO:Initializing create_model()
2023-06-23 13:54:09,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:54:09,834:INFO:Checking exceptions
2023-06-23 13:54:09,844:INFO:Importing libraries
2023-06-23 13:54:09,845:INFO:Copying training dataset
2023-06-23 13:54:09,852:INFO:Defining folds
2023-06-23 13:54:09,852:INFO:Declaring metric variables
2023-06-23 13:54:09,854:INFO:Importing untrained model
2023-06-23 13:54:09,857:INFO:Linear Regression Imported successfully
2023-06-23 13:54:09,862:INFO:Starting cross validation
2023-06-23 13:54:09,864:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:54:10,648:INFO:Calculating mean and std
2023-06-23 13:54:10,649:INFO:Creating metrics dataframe
2023-06-23 13:54:10,653:INFO:Finalizing model
2023-06-23 13:54:10,850:INFO:Uploading results into container
2023-06-23 13:54:10,851:INFO:Uploading model into container now
2023-06-23 13:54:10,861:INFO:_master_model_container: 20
2023-06-23 13:54:10,862:INFO:_display_container: 3
2023-06-23 13:54:10,862:INFO:LinearRegression(n_jobs=-1)
2023-06-23 13:54:10,862:INFO:create_model() successfully completed......................................
2023-06-23 13:54:23,740:INFO:Initializing tune_model()
2023-06-23 13:54:23,740:INFO:tune_model(estimator=LinearRegression(n_jobs=-1), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>)
2023-06-23 13:54:23,740:INFO:Checking exceptions
2023-06-23 13:54:23,756:INFO:Copying training dataset
2023-06-23 13:54:23,761:INFO:Checking base model
2023-06-23 13:54:23,761:INFO:Base model : Linear Regression
2023-06-23 13:54:23,764:INFO:Declaring metric variables
2023-06-23 13:54:23,767:INFO:Defining Hyperparameters
2023-06-23 13:54:23,768:INFO:10 is bigger than total combinations 2, setting search algorithm to grid
2023-06-23 13:54:23,924:INFO:Tuning with n_jobs=-1
2023-06-23 13:54:23,924:INFO:Initializing GridSearchCV
2023-06-23 13:54:25,376:INFO:best_params: {'actual_estimator__fit_intercept': False}
2023-06-23 13:54:25,377:INFO:Hyperparameter search completed
2023-06-23 13:54:25,377:INFO:SubProcess create_model() called ==================================
2023-06-23 13:54:25,377:INFO:Initializing create_model()
2023-06-23 13:54:25,377:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f404c782530>, model_only=True, return_train_score=False, kwargs={'fit_intercept': False})
2023-06-23 13:54:25,378:INFO:Checking exceptions
2023-06-23 13:54:25,378:INFO:Importing libraries
2023-06-23 13:54:25,378:INFO:Copying training dataset
2023-06-23 13:54:25,385:INFO:Defining folds
2023-06-23 13:54:25,385:INFO:Declaring metric variables
2023-06-23 13:54:25,388:INFO:Importing untrained model
2023-06-23 13:54:25,388:INFO:Declaring custom model
2023-06-23 13:54:25,391:INFO:Linear Regression Imported successfully
2023-06-23 13:54:25,395:INFO:Starting cross validation
2023-06-23 13:54:25,396:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:54:26,059:INFO:Calculating mean and std
2023-06-23 13:54:26,059:INFO:Creating metrics dataframe
2023-06-23 13:54:26,065:INFO:Finalizing model
2023-06-23 13:54:26,274:INFO:Uploading results into container
2023-06-23 13:54:26,275:INFO:Uploading model into container now
2023-06-23 13:54:26,276:INFO:_master_model_container: 21
2023-06-23 13:54:26,276:INFO:_display_container: 4
2023-06-23 13:54:26,276:INFO:LinearRegression(fit_intercept=False, n_jobs=-1)
2023-06-23 13:54:26,276:INFO:create_model() successfully completed......................................
2023-06-23 13:54:26,407:INFO:SubProcess create_model() end ==================================
2023-06-23 13:54:26,408:INFO:choose_better activated
2023-06-23 13:54:26,410:INFO:SubProcess create_model() called ==================================
2023-06-23 13:54:26,410:INFO:Initializing create_model()
2023-06-23 13:54:26,410:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 13:54:26,410:INFO:Checking exceptions
2023-06-23 13:54:26,412:INFO:Importing libraries
2023-06-23 13:54:26,412:INFO:Copying training dataset
2023-06-23 13:54:26,419:INFO:Defining folds
2023-06-23 13:54:26,419:INFO:Declaring metric variables
2023-06-23 13:54:26,420:INFO:Importing untrained model
2023-06-23 13:54:26,420:INFO:Declaring custom model
2023-06-23 13:54:26,420:INFO:Linear Regression Imported successfully
2023-06-23 13:54:26,420:INFO:Starting cross validation
2023-06-23 13:54:26,422:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 13:54:27,163:INFO:Calculating mean and std
2023-06-23 13:54:27,163:INFO:Creating metrics dataframe
2023-06-23 13:54:27,165:INFO:Finalizing model
2023-06-23 13:54:27,345:INFO:Uploading results into container
2023-06-23 13:54:27,347:INFO:Uploading model into container now
2023-06-23 13:54:27,347:INFO:_master_model_container: 22
2023-06-23 13:54:27,347:INFO:_display_container: 5
2023-06-23 13:54:27,348:INFO:LinearRegression(n_jobs=-1)
2023-06-23 13:54:27,348:INFO:create_model() successfully completed......................................
2023-06-23 13:54:27,487:INFO:SubProcess create_model() end ==================================
2023-06-23 13:54:27,487:INFO:LinearRegression(n_jobs=-1) result for R2 is 0.2219
2023-06-23 13:54:27,487:INFO:LinearRegression(fit_intercept=False, n_jobs=-1) result for R2 is 0.2219
2023-06-23 13:54:27,488:INFO:LinearRegression(n_jobs=-1) is best model
2023-06-23 13:54:27,488:INFO:choose_better completed
2023-06-23 13:54:27,488:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-23 13:54:27,494:INFO:_master_model_container: 22
2023-06-23 13:54:27,494:INFO:_display_container: 4
2023-06-23 13:54:27,494:INFO:LinearRegression(n_jobs=-1)
2023-06-23 13:54:27,494:INFO:tune_model() successfully completed......................................
2023-06-23 13:54:51,607:INFO:Initializing evaluate_model()
2023-06-23 13:54:51,607:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=LinearRegression(n_jobs=-1), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-23 13:54:51,619:INFO:Initializing plot_model()
2023-06-23 13:54:51,619:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, system=True)
2023-06-23 13:54:51,619:INFO:Checking exceptions
2023-06-23 13:54:51,622:INFO:Preloading libraries
2023-06-23 13:54:51,623:INFO:Copying training dataset
2023-06-23 13:54:51,623:INFO:Plot type: pipeline
2023-06-23 13:54:51,766:INFO:Visual Rendered Successfully
2023-06-23 13:54:51,902:INFO:plot_model() successfully completed......................................
2023-06-23 13:54:54,056:INFO:Initializing plot_model()
2023-06-23 13:54:54,056:INFO:plot_model(plot=residuals, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, system=True)
2023-06-23 13:54:54,056:INFO:Checking exceptions
2023-06-23 13:54:54,058:INFO:Preloading libraries
2023-06-23 13:54:54,059:INFO:Copying training dataset
2023-06-23 13:54:54,059:INFO:Plot type: residuals
2023-06-23 13:54:54,286:INFO:Fitting Model
2023-06-23 13:54:54,286:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names
  warnings.warn(

2023-06-23 13:54:54,322:INFO:Scoring test/hold-out set
2023-06-23 13:54:54,829:INFO:Visual Rendered Successfully
2023-06-23 13:54:54,933:INFO:plot_model() successfully completed......................................
2023-06-23 13:54:57,508:INFO:Initializing plot_model()
2023-06-23 13:54:57,508:INFO:plot_model(plot=learning, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, system=True)
2023-06-23 13:54:57,508:INFO:Checking exceptions
2023-06-23 13:54:57,511:INFO:Preloading libraries
2023-06-23 13:54:57,511:INFO:Copying training dataset
2023-06-23 13:54:57,511:INFO:Plot type: learning
2023-06-23 13:54:57,703:INFO:Fitting Model
2023-06-23 13:54:58,377:INFO:Visual Rendered Successfully
2023-06-23 13:54:58,501:INFO:plot_model() successfully completed......................................
2023-06-23 13:55:27,858:INFO:Initializing finalize_model()
2023-06-23 13:55:27,858:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-06-23 13:55:27,858:INFO:Finalizing LinearRegression(n_jobs=-1)
2023-06-23 13:55:27,863:INFO:Initializing create_model()
2023-06-23 13:55:27,863:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-06-23 13:55:27,863:INFO:Checking exceptions
2023-06-23 13:55:27,865:INFO:Importing libraries
2023-06-23 13:55:27,865:INFO:Copying training dataset
2023-06-23 13:55:27,865:INFO:Defining folds
2023-06-23 13:55:27,865:INFO:Declaring metric variables
2023-06-23 13:55:27,866:INFO:Importing untrained model
2023-06-23 13:55:27,866:INFO:Declaring custom model
2023-06-23 13:55:27,866:INFO:Linear Regression Imported successfully
2023-06-23 13:55:27,868:INFO:Cross validation set to False
2023-06-23 13:55:27,868:INFO:Fitting Model
2023-06-23 13:55:28,050:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2023-06-23 13:55:28,051:INFO:create_model() successfully completed......................................
2023-06-23 13:55:28,188:INFO:_master_model_container: 22
2023-06-23 13:55:28,188:INFO:_display_container: 4
2023-06-23 13:55:28,195:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2023-06-23 13:55:28,195:INFO:finalize_model() successfully completed......................................
2023-06-23 13:55:28,310:INFO:Initializing predict_model()
2023-06-23 13:55:28,310:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f3fc785ce50>)
2023-06-23 13:55:28,310:INFO:Checking exceptions
2023-06-23 13:55:28,310:INFO:Preloading libraries
2023-06-23 13:56:04,108:INFO:Initializing plot_model()
2023-06-23 13:56:04,109:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, system=True)
2023-06-23 13:56:04,110:INFO:Checking exceptions
2023-06-23 13:56:04,118:INFO:Preloading libraries
2023-06-23 13:56:04,118:INFO:Copying training dataset
2023-06-23 13:56:04,118:INFO:Plot type: residuals
2023-06-23 13:56:04,371:INFO:Fitting Model
2023-06-23 13:56:04,371:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names
  warnings.warn(

2023-06-23 13:56:04,409:INFO:Scoring test/hold-out set
2023-06-23 13:56:04,849:INFO:Visual Rendered Successfully
2023-06-23 13:56:04,984:INFO:plot_model() successfully completed......................................
2023-06-23 13:56:30,371:INFO:Initializing predict_model()
2023-06-23 13:56:30,371:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f3fc67384c0>)
2023-06-23 13:56:30,372:INFO:Checking exceptions
2023-06-23 13:56:30,372:INFO:Preloading libraries
2023-06-23 13:56:50,294:INFO:Initializing predict_model()
2023-06-23 13:56:50,294:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f3fc6739f30>)
2023-06-23 13:56:50,294:INFO:Checking exceptions
2023-06-23 13:56:50,294:INFO:Preloading libraries
2023-06-23 13:57:47,032:INFO:Initializing predict_model()
2023-06-23 13:57:47,033:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f3fc6738430>)
2023-06-23 13:57:47,033:INFO:Checking exceptions
2023-06-23 13:57:47,033:INFO:Preloading libraries
2023-06-23 13:58:17,332:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names
  warnings.warn(

2023-06-23 13:58:37,960:INFO:Initializing finalize_model()
2023-06-23 13:58:37,960:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-06-23 13:58:37,961:INFO:Finalizing LinearRegression(n_jobs=-1)
2023-06-23 13:58:37,965:INFO:Initializing create_model()
2023-06-23 13:58:37,965:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-06-23 13:58:37,965:INFO:Checking exceptions
2023-06-23 13:58:37,967:INFO:Importing libraries
2023-06-23 13:58:37,967:INFO:Copying training dataset
2023-06-23 13:58:37,968:INFO:Defining folds
2023-06-23 13:58:37,968:INFO:Declaring metric variables
2023-06-23 13:58:37,968:INFO:Importing untrained model
2023-06-23 13:58:37,968:INFO:Declaring custom model
2023-06-23 13:58:37,969:INFO:Linear Regression Imported successfully
2023-06-23 13:58:37,970:INFO:Cross validation set to False
2023-06-23 13:58:37,970:INFO:Fitting Model
2023-06-23 13:58:38,145:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2023-06-23 13:58:38,145:INFO:create_model() successfully completed......................................
2023-06-23 13:58:38,305:INFO:_master_model_container: 22
2023-06-23 13:58:38,305:INFO:_display_container: 8
2023-06-23 13:58:38,312:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2023-06-23 13:58:38,312:INFO:finalize_model() successfully completed......................................
2023-06-23 13:59:39,357:INFO:Initializing save_model()
2023-06-23 13:59:39,357:INFO:save_model(model=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=ml_airbnb, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-06-23 13:59:39,358:INFO:Adding model into prep_pipe
2023-06-23 13:59:39,358:WARNING:Only Model saved as it was a pipeline.
2023-06-23 13:59:39,371:INFO:ml_airbnb.pkl saved in current working directory
2023-06-23 13:59:39,380:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2023-06-23 13:59:39,381:INFO:save_model() successfully completed......................................
2023-06-23 14:41:55,262:INFO:Initializing plot_model()
2023-06-23 14:41:55,263:INFO:plot_model(plot=vc, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, system=True)
2023-06-23 14:41:55,263:INFO:Checking exceptions
2023-06-23 14:41:55,266:INFO:Preloading libraries
2023-06-23 14:41:55,267:INFO:Copying training dataset
2023-06-23 14:41:55,267:INFO:Plot type: vc
2023-06-23 14:41:55,268:INFO:Determining param_name
2023-06-23 14:41:58,235:INFO:Initializing plot_model()
2023-06-23 14:41:58,235:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, system=True)
2023-06-23 14:41:58,236:INFO:Checking exceptions
2023-06-23 14:41:58,238:INFO:Preloading libraries
2023-06-23 14:41:58,238:INFO:Copying training dataset
2023-06-23 14:41:58,238:INFO:Plot type: feature
2023-06-23 14:41:58,465:INFO:Visual Rendered Successfully
2023-06-23 14:41:58,613:INFO:plot_model() successfully completed......................................
2023-06-23 14:42:36,061:INFO:Initializing plot_model()
2023-06-23 14:42:36,061:INFO:plot_model(plot=tree, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, system=True)
2023-06-23 14:42:36,061:INFO:Checking exceptions
2023-06-23 14:42:37,072:INFO:Initializing plot_model()
2023-06-23 14:42:37,073:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3fc8c10850>, system=True)
2023-06-23 14:42:37,076:INFO:Checking exceptions
2023-06-23 14:42:37,082:INFO:Preloading libraries
2023-06-23 14:42:37,083:INFO:Copying training dataset
2023-06-23 14:42:37,083:INFO:Plot type: feature_all
2023-06-23 14:42:37,511:INFO:Visual Rendered Successfully
2023-06-23 14:42:37,656:INFO:plot_model() successfully completed......................................
2023-06-23 15:00:54,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 15:00:54,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 15:00:54,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 15:00:54,788:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 15:00:55,193:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-23 15:00:55,326:INFO:Initializing load_model()
2023-06-23 15:00:55,326:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:00:58,398:INFO:Initializing load_model()
2023-06-23 15:00:58,398:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:01:00,364:INFO:Initializing load_model()
2023-06-23 15:01:00,364:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:01:01,620:INFO:Initializing load_model()
2023-06-23 15:01:01,620:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:01:03,704:INFO:Initializing load_model()
2023-06-23 15:01:03,704:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:01:05,752:INFO:Initializing load_model()
2023-06-23 15:01:05,752:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:01:06,222:INFO:Initializing load_model()
2023-06-23 15:01:06,222:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:01:07,719:INFO:Initializing load_model()
2023-06-23 15:01:07,719:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:01:08,852:INFO:Initializing load_model()
2023-06-23 15:01:08,852:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:01:09,285:INFO:Initializing load_model()
2023-06-23 15:01:09,285:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:01:09,703:INFO:Initializing load_model()
2023-06-23 15:01:09,704:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:01:11,486:INFO:Initializing load_model()
2023-06-23 15:01:11,486:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:01:12,357:INFO:Initializing load_model()
2023-06-23 15:01:12,357:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:01:12,378:INFO:Initializing predict_model()
2023-06-23 15:01:12,378:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f6ce6d199c0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f6ce6c95630>)
2023-06-23 15:01:12,379:INFO:Checking exceptions
2023-06-23 15:01:12,379:INFO:Preloading libraries
2023-06-23 15:01:12,380:INFO:Set up data.
2023-06-23 15:01:12,385:INFO:Set up index.
2023-06-23 15:13:57,233:INFO:Initializing load_model()
2023-06-23 15:13:57,233:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:13:58,069:INFO:Initializing load_model()
2023-06-23 15:13:58,069:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:13:59,681:INFO:Initializing load_model()
2023-06-23 15:13:59,681:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:14:24,377:INFO:Initializing load_model()
2023-06-23 15:14:24,377:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 15:14:24,391:INFO:Initializing predict_model()
2023-06-23 15:14:24,391:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f6ce6f79750>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f6d3030c3a0>)
2023-06-23 15:14:24,392:INFO:Checking exceptions
2023-06-23 15:14:24,392:INFO:Preloading libraries
2023-06-23 15:14:24,394:INFO:Set up data.
2023-06-23 15:14:24,399:INFO:Set up index.
2023-06-23 15:58:04,319:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 15:58:04,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 15:58:04,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 15:58:04,320:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 15:58:04,749:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-23 15:58:04,996:INFO:PyCaret RegressionExperiment
2023-06-23 15:58:04,997:INFO:Logging name: reg-default-name
2023-06-23 15:58:04,997:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-23 15:58:04,997:INFO:version 3.0.2
2023-06-23 15:58:04,997:INFO:Initializing setup()
2023-06-23 15:58:04,997:INFO:self.USI: f757
2023-06-23 15:58:04,997:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'y_test', 'fold_generator', 'data', 'transform_target_param', '_ml_usecase', 'fold_groups_param', 'html_param', 'USI', 'logging_param', 'seed', 'memory', 'exp_name_log', 'X_train', 'exp_id', 'y_train', 'X', 'idx', 'gpu_param', 'log_plots_param', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'y', 'pipeline', 'fold_shuffle_param'}
2023-06-23 15:58:04,997:INFO:Checking environment
2023-06-23 15:58:04,997:INFO:python_version: 3.10.6
2023-06-23 15:58:04,997:INFO:python_build: ('main', 'May 29 2023 11:10:38')
2023-06-23 15:58:04,997:INFO:machine: x86_64
2023-06-23 15:58:04,997:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-06-23 15:58:04,997:INFO:Memory: svmem(total=7949160448, available=2197159936, percent=72.4, used=4520882176, free=1105805312, active=1620557824, inactive=4281421824, buffers=50229248, cached=2272243712, shared=925159424, slab=456896512)
2023-06-23 15:58:04,998:INFO:Physical Core: 4
2023-06-23 15:58:04,998:INFO:Logical Core: 8
2023-06-23 15:58:04,998:INFO:Checking libraries
2023-06-23 15:58:04,998:INFO:System:
2023-06-23 15:58:04,998:INFO:    python: 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0]
2023-06-23 15:58:04,998:INFO:executable: /bin/python3
2023-06-23 15:58:04,998:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-06-23 15:58:04,998:INFO:PyCaret required dependencies:
2023-06-23 15:58:04,998:INFO:                 pip: 22.0.2
2023-06-23 15:58:04,999:INFO:          setuptools: 59.6.0
2023-06-23 15:58:04,999:INFO:             pycaret: 3.0.2
2023-06-23 15:58:04,999:INFO:             IPython: 8.13.2
2023-06-23 15:58:04,999:INFO:          ipywidgets: 8.0.6
2023-06-23 15:58:04,999:INFO:                tqdm: 4.65.0
2023-06-23 15:58:04,999:INFO:               numpy: 1.23.5
2023-06-23 15:58:04,999:INFO:              pandas: 1.5.3
2023-06-23 15:58:04,999:INFO:              jinja2: 3.1.2
2023-06-23 15:58:04,999:INFO:               scipy: 1.10.1
2023-06-23 15:58:04,999:INFO:              joblib: 1.2.0
2023-06-23 15:58:04,999:INFO:             sklearn: 1.2.2
2023-06-23 15:58:04,999:INFO:                pyod: 1.0.9
2023-06-23 15:58:04,999:INFO:            imblearn: 0.10.1
2023-06-23 15:58:04,999:INFO:   category_encoders: 2.6.1
2023-06-23 15:58:04,999:INFO:            lightgbm: 3.3.5
2023-06-23 15:58:04,999:INFO:               numba: 0.57.0
2023-06-23 15:58:04,999:INFO:            requests: 2.25.1
2023-06-23 15:58:04,999:INFO:          matplotlib: 3.7.1
2023-06-23 15:58:04,999:INFO:          scikitplot: 0.3.7
2023-06-23 15:58:04,999:INFO:         yellowbrick: 1.5
2023-06-23 15:58:04,999:INFO:              plotly: 5.14.1
2023-06-23 15:58:04,999:INFO:             kaleido: 0.2.1
2023-06-23 15:58:04,999:INFO:         statsmodels: 0.14.0
2023-06-23 15:58:04,999:INFO:              sktime: 0.17.0
2023-06-23 15:58:04,999:INFO:               tbats: 1.1.3
2023-06-23 15:58:04,999:INFO:            pmdarima: 2.0.3
2023-06-23 15:58:04,999:INFO:              psutil: 5.9.5
2023-06-23 15:58:04,999:INFO:PyCaret optional dependencies:
2023-06-23 15:58:05,854:INFO:                shap: Not installed
2023-06-23 15:58:05,854:INFO:           interpret: Not installed
2023-06-23 15:58:05,854:INFO:                umap: Not installed
2023-06-23 15:58:05,854:INFO:    pandas_profiling: Not installed
2023-06-23 15:58:05,854:INFO:  explainerdashboard: Not installed
2023-06-23 15:58:05,854:INFO:             autoviz: Not installed
2023-06-23 15:58:05,855:INFO:           fairlearn: Not installed
2023-06-23 15:58:05,855:INFO:             xgboost: 1.7.5
2023-06-23 15:58:05,855:INFO:            catboost: Not installed
2023-06-23 15:58:05,855:INFO:              kmodes: Not installed
2023-06-23 15:58:05,855:INFO:             mlxtend: Not installed
2023-06-23 15:58:05,855:INFO:       statsforecast: Not installed
2023-06-23 15:58:05,855:INFO:        tune_sklearn: Not installed
2023-06-23 15:58:05,855:INFO:                 ray: Not installed
2023-06-23 15:58:05,855:INFO:            hyperopt: Not installed
2023-06-23 15:58:05,855:INFO:              optuna: Not installed
2023-06-23 15:58:05,855:INFO:               skopt: Not installed
2023-06-23 15:58:05,855:INFO:              mlflow: Not installed
2023-06-23 15:58:05,855:INFO:              gradio: 3.34.0
2023-06-23 15:58:05,855:INFO:             fastapi: 0.96.0
2023-06-23 15:58:05,855:INFO:             uvicorn: 0.22.0
2023-06-23 15:58:05,855:INFO:              m2cgen: Not installed
2023-06-23 15:58:05,855:INFO:           evidently: Not installed
2023-06-23 15:58:05,855:INFO:               fugue: Not installed
2023-06-23 15:58:05,855:INFO:           streamlit: 1.23.1
2023-06-23 15:58:05,855:INFO:             prophet: Not installed
2023-06-23 15:58:05,855:INFO:None
2023-06-23 15:58:05,855:INFO:Set up data.
2023-06-23 15:58:26,948:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 15:58:26,948:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 15:58:26,948:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 15:58:26,948:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 15:58:27,180:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-23 15:58:27,294:INFO:PyCaret RegressionExperiment
2023-06-23 15:58:27,294:INFO:Logging name: reg-default-name
2023-06-23 15:58:27,294:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-23 15:58:27,294:INFO:version 3.0.2
2023-06-23 15:58:27,294:INFO:Initializing setup()
2023-06-23 15:58:27,294:INFO:self.USI: 9195
2023-06-23 15:58:27,294:INFO:self._variable_keys: {'USI', 'pipeline', 'n_jobs_param', 'y_test', 'fold_groups_param', '_available_plots', 'logging_param', 'exp_name_log', 'target_param', 'fold_shuffle_param', 'X_test', 'log_plots_param', 'idx', 'seed', 'X_train', 'exp_id', 'gpu_param', 'html_param', 'memory', '_ml_usecase', 'y', 'gpu_n_jobs_param', 'y_train', 'data', 'fold_generator', 'transform_target_param', 'X'}
2023-06-23 15:58:27,294:INFO:Checking environment
2023-06-23 15:58:27,294:INFO:python_version: 3.10.6
2023-06-23 15:58:27,294:INFO:python_build: ('main', 'May 29 2023 11:10:38')
2023-06-23 15:58:27,294:INFO:machine: x86_64
2023-06-23 15:58:27,294:INFO:platform: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-06-23 15:58:27,294:INFO:Memory: svmem(total=7949160448, available=2100551680, percent=73.6, used=4618760192, free=965881856, active=1697218560, inactive=4318822400, buffers=52371456, cached=2312146944, shared=924160000, slab=457715712)
2023-06-23 15:58:27,295:INFO:Physical Core: 4
2023-06-23 15:58:27,295:INFO:Logical Core: 8
2023-06-23 15:58:27,295:INFO:Checking libraries
2023-06-23 15:58:27,295:INFO:System:
2023-06-23 15:58:27,295:INFO:    python: 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0]
2023-06-23 15:58:27,295:INFO:executable: /bin/python3
2023-06-23 15:58:27,295:INFO:   machine: Linux-5.19.0-45-generic-x86_64-with-glibc2.35
2023-06-23 15:58:27,295:INFO:PyCaret required dependencies:
2023-06-23 15:58:27,295:INFO:                 pip: 22.0.2
2023-06-23 15:58:27,296:INFO:          setuptools: 59.6.0
2023-06-23 15:58:27,296:INFO:             pycaret: 3.0.2
2023-06-23 15:58:27,296:INFO:             IPython: 8.13.2
2023-06-23 15:58:27,296:INFO:          ipywidgets: 8.0.6
2023-06-23 15:58:27,296:INFO:                tqdm: 4.65.0
2023-06-23 15:58:27,296:INFO:               numpy: 1.23.5
2023-06-23 15:58:27,296:INFO:              pandas: 1.5.3
2023-06-23 15:58:27,296:INFO:              jinja2: 3.1.2
2023-06-23 15:58:27,296:INFO:               scipy: 1.10.1
2023-06-23 15:58:27,296:INFO:              joblib: 1.2.0
2023-06-23 15:58:27,296:INFO:             sklearn: 1.2.2
2023-06-23 15:58:27,296:INFO:                pyod: 1.0.9
2023-06-23 15:58:27,296:INFO:            imblearn: 0.10.1
2023-06-23 15:58:27,296:INFO:   category_encoders: 2.6.1
2023-06-23 15:58:27,296:INFO:            lightgbm: 3.3.5
2023-06-23 15:58:27,296:INFO:               numba: 0.57.0
2023-06-23 15:58:27,296:INFO:            requests: 2.25.1
2023-06-23 15:58:27,296:INFO:          matplotlib: 3.7.1
2023-06-23 15:58:27,296:INFO:          scikitplot: 0.3.7
2023-06-23 15:58:27,296:INFO:         yellowbrick: 1.5
2023-06-23 15:58:27,296:INFO:              plotly: 5.14.1
2023-06-23 15:58:27,296:INFO:             kaleido: 0.2.1
2023-06-23 15:58:27,296:INFO:         statsmodels: 0.14.0
2023-06-23 15:58:27,296:INFO:              sktime: 0.17.0
2023-06-23 15:58:27,296:INFO:               tbats: 1.1.3
2023-06-23 15:58:27,296:INFO:            pmdarima: 2.0.3
2023-06-23 15:58:27,296:INFO:              psutil: 5.9.5
2023-06-23 15:58:27,296:INFO:PyCaret optional dependencies:
2023-06-23 15:58:28,000:INFO:                shap: Not installed
2023-06-23 15:58:28,000:INFO:           interpret: Not installed
2023-06-23 15:58:28,000:INFO:                umap: Not installed
2023-06-23 15:58:28,000:INFO:    pandas_profiling: Not installed
2023-06-23 15:58:28,000:INFO:  explainerdashboard: Not installed
2023-06-23 15:58:28,000:INFO:             autoviz: Not installed
2023-06-23 15:58:28,001:INFO:           fairlearn: Not installed
2023-06-23 15:58:28,001:INFO:             xgboost: 1.7.5
2023-06-23 15:58:28,001:INFO:            catboost: Not installed
2023-06-23 15:58:28,001:INFO:              kmodes: Not installed
2023-06-23 15:58:28,001:INFO:             mlxtend: Not installed
2023-06-23 15:58:28,001:INFO:       statsforecast: Not installed
2023-06-23 15:58:28,001:INFO:        tune_sklearn: Not installed
2023-06-23 15:58:28,001:INFO:                 ray: Not installed
2023-06-23 15:58:28,001:INFO:            hyperopt: Not installed
2023-06-23 15:58:28,001:INFO:              optuna: Not installed
2023-06-23 15:58:28,001:INFO:               skopt: Not installed
2023-06-23 15:58:28,001:INFO:              mlflow: Not installed
2023-06-23 15:58:28,001:INFO:              gradio: 3.34.0
2023-06-23 15:58:28,001:INFO:             fastapi: 0.96.0
2023-06-23 15:58:28,001:INFO:             uvicorn: 0.22.0
2023-06-23 15:58:28,001:INFO:              m2cgen: Not installed
2023-06-23 15:58:28,001:INFO:           evidently: Not installed
2023-06-23 15:58:28,001:INFO:               fugue: Not installed
2023-06-23 15:58:28,001:INFO:           streamlit: 1.23.1
2023-06-23 15:58:28,001:INFO:             prophet: Not installed
2023-06-23 15:58:28,001:INFO:None
2023-06-23 15:58:28,001:INFO:Set up data.
2023-06-23 15:58:28,015:INFO:Set up train/test split.
2023-06-23 15:58:28,020:INFO:Set up index.
2023-06-23 15:58:28,020:INFO:Set up folding strategy.
2023-06-23 15:58:28,020:INFO:Assigning column types.
2023-06-23 15:58:28,022:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-23 15:58:28,022:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,026:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,029:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,069:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,101:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,101:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:28,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:28,155:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,158:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,161:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,200:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,229:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,229:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:28,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:28,231:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-23 15:58:28,234:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,237:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,274:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,307:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,309:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:28,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:28,317:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,321:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,365:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,397:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,397:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:28,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:28,399:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-23 15:58:28,406:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,449:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,478:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,479:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:28,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:28,486:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,526:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,555:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,556:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:28,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:28,558:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-23 15:58:28,603:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,633:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,633:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:28,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:28,680:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,709:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,709:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:28,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:28,712:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-23 15:58:28,758:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,788:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:28,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:28,835:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-23 15:58:28,865:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:28,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:28,867:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-23 15:58:28,943:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:28,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:29,020:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:29,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:29,028:INFO:Preparing preprocessing pipeline...
2023-06-23 15:58:29,028:INFO:Set up simple imputation.
2023-06-23 15:58:29,031:INFO:Set up encoding of categorical features.
2023-06-23 15:58:29,124:INFO:Finished creating preprocessing pipeline.
2023-06-23 15:58:29,130:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan')))])
2023-06-23 15:58:29,130:INFO:Creating final display dataframe.
2023-06-23 15:58:29,369:INFO:Setup _display_container:                     Description             Value
0                    Session id              7647
1                        Target             price
2                   Target type        Regression
3           Original data shape        (20030, 7)
4        Transformed data shape       (20030, 30)
5   Transformed train set shape       (14021, 30)
6    Transformed test set shape        (6009, 30)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              9195
2023-06-23 15:58:29,484:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:29,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:29,559:INFO:Soft dependency imported: xgboost: 1.7.5
2023-06-23 15:58:29,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 15:58:29,562:INFO:setup() successfully completed in 2.29s...............
2023-06-23 15:58:29,574:INFO:Initializing compare_models()
2023-06-23 15:58:29,574:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-23 15:58:29,575:INFO:Checking exceptions
2023-06-23 15:58:29,577:INFO:Preparing display monitor
2023-06-23 15:58:29,600:INFO:Initializing Linear Regression
2023-06-23 15:58:29,600:INFO:Total runtime is 3.6398569742838544e-06 minutes
2023-06-23 15:58:29,603:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:29,603:INFO:Initializing create_model()
2023-06-23 15:58:29,603:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:29,603:INFO:Checking exceptions
2023-06-23 15:58:29,604:INFO:Importing libraries
2023-06-23 15:58:29,604:INFO:Copying training dataset
2023-06-23 15:58:29,610:INFO:Defining folds
2023-06-23 15:58:29,610:INFO:Declaring metric variables
2023-06-23 15:58:29,614:INFO:Importing untrained model
2023-06-23 15:58:29,616:INFO:Linear Regression Imported successfully
2023-06-23 15:58:29,622:INFO:Starting cross validation
2023-06-23 15:58:29,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:32,603:INFO:Calculating mean and std
2023-06-23 15:58:32,604:INFO:Creating metrics dataframe
2023-06-23 15:58:32,681:INFO:Uploading results into container
2023-06-23 15:58:32,682:INFO:Uploading model into container now
2023-06-23 15:58:32,682:INFO:_master_model_container: 1
2023-06-23 15:58:32,682:INFO:_display_container: 2
2023-06-23 15:58:32,683:INFO:LinearRegression(n_jobs=-1)
2023-06-23 15:58:32,683:INFO:create_model() successfully completed......................................
2023-06-23 15:58:32,777:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:32,777:INFO:Creating metrics dataframe
2023-06-23 15:58:32,782:INFO:Initializing Lasso Regression
2023-06-23 15:58:32,783:INFO:Total runtime is 0.053040015697479244 minutes
2023-06-23 15:58:32,785:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:32,785:INFO:Initializing create_model()
2023-06-23 15:58:32,785:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:32,785:INFO:Checking exceptions
2023-06-23 15:58:32,785:INFO:Importing libraries
2023-06-23 15:58:32,786:INFO:Copying training dataset
2023-06-23 15:58:32,790:INFO:Defining folds
2023-06-23 15:58:32,791:INFO:Declaring metric variables
2023-06-23 15:58:32,793:INFO:Importing untrained model
2023-06-23 15:58:32,796:INFO:Lasso Regression Imported successfully
2023-06-23 15:58:32,801:INFO:Starting cross validation
2023-06-23 15:58:32,802:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:33,524:INFO:Calculating mean and std
2023-06-23 15:58:33,525:INFO:Creating metrics dataframe
2023-06-23 15:58:33,597:INFO:Uploading results into container
2023-06-23 15:58:33,598:INFO:Uploading model into container now
2023-06-23 15:58:33,598:INFO:_master_model_container: 2
2023-06-23 15:58:33,598:INFO:_display_container: 2
2023-06-23 15:58:33,598:INFO:Lasso(random_state=7647)
2023-06-23 15:58:33,598:INFO:create_model() successfully completed......................................
2023-06-23 15:58:33,679:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:33,679:INFO:Creating metrics dataframe
2023-06-23 15:58:33,685:INFO:Initializing Ridge Regression
2023-06-23 15:58:33,685:INFO:Total runtime is 0.06808945735295613 minutes
2023-06-23 15:58:33,688:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:33,689:INFO:Initializing create_model()
2023-06-23 15:58:33,689:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:33,689:INFO:Checking exceptions
2023-06-23 15:58:33,689:INFO:Importing libraries
2023-06-23 15:58:33,689:INFO:Copying training dataset
2023-06-23 15:58:33,693:INFO:Defining folds
2023-06-23 15:58:33,694:INFO:Declaring metric variables
2023-06-23 15:58:33,696:INFO:Importing untrained model
2023-06-23 15:58:33,699:INFO:Ridge Regression Imported successfully
2023-06-23 15:58:33,703:INFO:Starting cross validation
2023-06-23 15:58:33,704:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:34,326:INFO:Calculating mean and std
2023-06-23 15:58:34,327:INFO:Creating metrics dataframe
2023-06-23 15:58:34,401:INFO:Uploading results into container
2023-06-23 15:58:34,401:INFO:Uploading model into container now
2023-06-23 15:58:34,402:INFO:_master_model_container: 3
2023-06-23 15:58:34,402:INFO:_display_container: 2
2023-06-23 15:58:34,402:INFO:Ridge(random_state=7647)
2023-06-23 15:58:34,402:INFO:create_model() successfully completed......................................
2023-06-23 15:58:34,485:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:34,485:INFO:Creating metrics dataframe
2023-06-23 15:58:34,492:INFO:Initializing Elastic Net
2023-06-23 15:58:34,492:INFO:Total runtime is 0.0815252105394999 minutes
2023-06-23 15:58:34,494:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:34,494:INFO:Initializing create_model()
2023-06-23 15:58:34,494:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:34,494:INFO:Checking exceptions
2023-06-23 15:58:34,494:INFO:Importing libraries
2023-06-23 15:58:34,494:INFO:Copying training dataset
2023-06-23 15:58:34,499:INFO:Defining folds
2023-06-23 15:58:34,499:INFO:Declaring metric variables
2023-06-23 15:58:34,502:INFO:Importing untrained model
2023-06-23 15:58:34,505:INFO:Elastic Net Imported successfully
2023-06-23 15:58:34,510:INFO:Starting cross validation
2023-06-23 15:58:34,511:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:35,098:INFO:Calculating mean and std
2023-06-23 15:58:35,099:INFO:Creating metrics dataframe
2023-06-23 15:58:35,176:INFO:Uploading results into container
2023-06-23 15:58:35,177:INFO:Uploading model into container now
2023-06-23 15:58:35,177:INFO:_master_model_container: 4
2023-06-23 15:58:35,178:INFO:_display_container: 2
2023-06-23 15:58:35,178:INFO:ElasticNet(random_state=7647)
2023-06-23 15:58:35,178:INFO:create_model() successfully completed......................................
2023-06-23 15:58:35,274:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:35,274:INFO:Creating metrics dataframe
2023-06-23 15:58:35,280:INFO:Initializing Least Angle Regression
2023-06-23 15:58:35,280:INFO:Total runtime is 0.09467075665791828 minutes
2023-06-23 15:58:35,283:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:35,283:INFO:Initializing create_model()
2023-06-23 15:58:35,283:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:35,284:INFO:Checking exceptions
2023-06-23 15:58:35,284:INFO:Importing libraries
2023-06-23 15:58:35,284:INFO:Copying training dataset
2023-06-23 15:58:35,289:INFO:Defining folds
2023-06-23 15:58:35,289:INFO:Declaring metric variables
2023-06-23 15:58:35,291:INFO:Importing untrained model
2023-06-23 15:58:35,294:INFO:Least Angle Regression Imported successfully
2023-06-23 15:58:35,298:INFO:Starting cross validation
2023-06-23 15:58:35,300:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:35,888:INFO:Calculating mean and std
2023-06-23 15:58:35,889:INFO:Creating metrics dataframe
2023-06-23 15:58:35,961:INFO:Uploading results into container
2023-06-23 15:58:35,962:INFO:Uploading model into container now
2023-06-23 15:58:35,962:INFO:_master_model_container: 5
2023-06-23 15:58:35,962:INFO:_display_container: 2
2023-06-23 15:58:35,962:INFO:Lars(random_state=7647)
2023-06-23 15:58:35,962:INFO:create_model() successfully completed......................................
2023-06-23 15:58:36,046:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:36,046:INFO:Creating metrics dataframe
2023-06-23 15:58:36,053:INFO:Initializing Lasso Least Angle Regression
2023-06-23 15:58:36,053:INFO:Total runtime is 0.10755266348520914 minutes
2023-06-23 15:58:36,056:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:36,056:INFO:Initializing create_model()
2023-06-23 15:58:36,056:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:36,056:INFO:Checking exceptions
2023-06-23 15:58:36,056:INFO:Importing libraries
2023-06-23 15:58:36,056:INFO:Copying training dataset
2023-06-23 15:58:36,061:INFO:Defining folds
2023-06-23 15:58:36,061:INFO:Declaring metric variables
2023-06-23 15:58:36,063:INFO:Importing untrained model
2023-06-23 15:58:36,066:INFO:Lasso Least Angle Regression Imported successfully
2023-06-23 15:58:36,071:INFO:Starting cross validation
2023-06-23 15:58:36,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:36,693:INFO:Calculating mean and std
2023-06-23 15:58:36,694:INFO:Creating metrics dataframe
2023-06-23 15:58:36,768:INFO:Uploading results into container
2023-06-23 15:58:36,768:INFO:Uploading model into container now
2023-06-23 15:58:36,769:INFO:_master_model_container: 6
2023-06-23 15:58:36,769:INFO:_display_container: 2
2023-06-23 15:58:36,769:INFO:LassoLars(random_state=7647)
2023-06-23 15:58:36,769:INFO:create_model() successfully completed......................................
2023-06-23 15:58:36,851:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:36,851:INFO:Creating metrics dataframe
2023-06-23 15:58:36,857:INFO:Initializing Orthogonal Matching Pursuit
2023-06-23 15:58:36,857:INFO:Total runtime is 0.12095594803492228 minutes
2023-06-23 15:58:36,859:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:36,860:INFO:Initializing create_model()
2023-06-23 15:58:36,860:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:36,860:INFO:Checking exceptions
2023-06-23 15:58:36,860:INFO:Importing libraries
2023-06-23 15:58:36,860:INFO:Copying training dataset
2023-06-23 15:58:36,864:INFO:Defining folds
2023-06-23 15:58:36,865:INFO:Declaring metric variables
2023-06-23 15:58:36,867:INFO:Importing untrained model
2023-06-23 15:58:36,870:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-23 15:58:36,874:INFO:Starting cross validation
2023-06-23 15:58:36,875:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:37,478:INFO:Calculating mean and std
2023-06-23 15:58:37,479:INFO:Creating metrics dataframe
2023-06-23 15:58:37,558:INFO:Uploading results into container
2023-06-23 15:58:37,558:INFO:Uploading model into container now
2023-06-23 15:58:37,559:INFO:_master_model_container: 7
2023-06-23 15:58:37,559:INFO:_display_container: 2
2023-06-23 15:58:37,559:INFO:OrthogonalMatchingPursuit()
2023-06-23 15:58:37,559:INFO:create_model() successfully completed......................................
2023-06-23 15:58:37,640:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:37,640:INFO:Creating metrics dataframe
2023-06-23 15:58:37,647:INFO:Initializing Bayesian Ridge
2023-06-23 15:58:37,647:INFO:Total runtime is 0.13410815000534057 minutes
2023-06-23 15:58:37,649:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:37,649:INFO:Initializing create_model()
2023-06-23 15:58:37,649:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:37,649:INFO:Checking exceptions
2023-06-23 15:58:37,649:INFO:Importing libraries
2023-06-23 15:58:37,649:INFO:Copying training dataset
2023-06-23 15:58:37,654:INFO:Defining folds
2023-06-23 15:58:37,654:INFO:Declaring metric variables
2023-06-23 15:58:37,656:INFO:Importing untrained model
2023-06-23 15:58:37,659:INFO:Bayesian Ridge Imported successfully
2023-06-23 15:58:37,664:INFO:Starting cross validation
2023-06-23 15:58:37,666:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:38,307:INFO:Calculating mean and std
2023-06-23 15:58:38,307:INFO:Creating metrics dataframe
2023-06-23 15:58:38,380:INFO:Uploading results into container
2023-06-23 15:58:38,381:INFO:Uploading model into container now
2023-06-23 15:58:38,381:INFO:_master_model_container: 8
2023-06-23 15:58:38,382:INFO:_display_container: 2
2023-06-23 15:58:38,382:INFO:BayesianRidge()
2023-06-23 15:58:38,382:INFO:create_model() successfully completed......................................
2023-06-23 15:58:38,464:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:38,464:INFO:Creating metrics dataframe
2023-06-23 15:58:38,471:INFO:Initializing Passive Aggressive Regressor
2023-06-23 15:58:38,471:INFO:Total runtime is 0.1478508949279785 minutes
2023-06-23 15:58:38,473:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:38,474:INFO:Initializing create_model()
2023-06-23 15:58:38,474:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:38,474:INFO:Checking exceptions
2023-06-23 15:58:38,474:INFO:Importing libraries
2023-06-23 15:58:38,474:INFO:Copying training dataset
2023-06-23 15:58:38,479:INFO:Defining folds
2023-06-23 15:58:38,479:INFO:Declaring metric variables
2023-06-23 15:58:38,481:INFO:Importing untrained model
2023-06-23 15:58:38,484:INFO:Passive Aggressive Regressor Imported successfully
2023-06-23 15:58:38,489:INFO:Starting cross validation
2023-06-23 15:58:38,490:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:39,215:INFO:Calculating mean and std
2023-06-23 15:58:39,216:INFO:Creating metrics dataframe
2023-06-23 15:58:39,290:INFO:Uploading results into container
2023-06-23 15:58:39,290:INFO:Uploading model into container now
2023-06-23 15:58:39,291:INFO:_master_model_container: 9
2023-06-23 15:58:39,291:INFO:_display_container: 2
2023-06-23 15:58:39,291:INFO:PassiveAggressiveRegressor(random_state=7647)
2023-06-23 15:58:39,291:INFO:create_model() successfully completed......................................
2023-06-23 15:58:39,375:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:39,375:INFO:Creating metrics dataframe
2023-06-23 15:58:39,383:INFO:Initializing Huber Regressor
2023-06-23 15:58:39,383:INFO:Total runtime is 0.16305042107899984 minutes
2023-06-23 15:58:39,386:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:39,386:INFO:Initializing create_model()
2023-06-23 15:58:39,386:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:39,386:INFO:Checking exceptions
2023-06-23 15:58:39,386:INFO:Importing libraries
2023-06-23 15:58:39,386:INFO:Copying training dataset
2023-06-23 15:58:39,391:INFO:Defining folds
2023-06-23 15:58:39,391:INFO:Declaring metric variables
2023-06-23 15:58:39,394:INFO:Importing untrained model
2023-06-23 15:58:39,397:INFO:Huber Regressor Imported successfully
2023-06-23 15:58:39,403:INFO:Starting cross validation
2023-06-23 15:58:39,404:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:40,388:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 15:58:40,452:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 15:58:40,486:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 15:58:40,514:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 15:58:40,642:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 15:58:40,696:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 15:58:40,717:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 15:58:40,732:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 15:58:41,131:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 15:58:41,149:WARNING:/home/deme/.local/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-23 15:58:41,222:INFO:Calculating mean and std
2023-06-23 15:58:41,223:INFO:Creating metrics dataframe
2023-06-23 15:58:41,301:INFO:Uploading results into container
2023-06-23 15:58:41,302:INFO:Uploading model into container now
2023-06-23 15:58:41,302:INFO:_master_model_container: 10
2023-06-23 15:58:41,302:INFO:_display_container: 2
2023-06-23 15:58:41,302:INFO:HuberRegressor()
2023-06-23 15:58:41,302:INFO:create_model() successfully completed......................................
2023-06-23 15:58:41,397:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:41,397:INFO:Creating metrics dataframe
2023-06-23 15:58:41,405:INFO:Initializing K Neighbors Regressor
2023-06-23 15:58:41,405:INFO:Total runtime is 0.1967504103978475 minutes
2023-06-23 15:58:41,408:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:41,408:INFO:Initializing create_model()
2023-06-23 15:58:41,408:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:41,408:INFO:Checking exceptions
2023-06-23 15:58:41,408:INFO:Importing libraries
2023-06-23 15:58:41,408:INFO:Copying training dataset
2023-06-23 15:58:41,413:INFO:Defining folds
2023-06-23 15:58:41,413:INFO:Declaring metric variables
2023-06-23 15:58:41,416:INFO:Importing untrained model
2023-06-23 15:58:41,420:INFO:K Neighbors Regressor Imported successfully
2023-06-23 15:58:41,429:INFO:Starting cross validation
2023-06-23 15:58:41,431:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:42,392:INFO:Calculating mean and std
2023-06-23 15:58:42,396:INFO:Creating metrics dataframe
2023-06-23 15:58:42,485:INFO:Uploading results into container
2023-06-23 15:58:42,486:INFO:Uploading model into container now
2023-06-23 15:58:42,486:INFO:_master_model_container: 11
2023-06-23 15:58:42,486:INFO:_display_container: 2
2023-06-23 15:58:42,486:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-23 15:58:42,486:INFO:create_model() successfully completed......................................
2023-06-23 15:58:42,571:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:42,572:INFO:Creating metrics dataframe
2023-06-23 15:58:42,580:INFO:Initializing Decision Tree Regressor
2023-06-23 15:58:42,580:INFO:Total runtime is 0.2163273294766744 minutes
2023-06-23 15:58:42,582:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:42,583:INFO:Initializing create_model()
2023-06-23 15:58:42,583:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:42,583:INFO:Checking exceptions
2023-06-23 15:58:42,583:INFO:Importing libraries
2023-06-23 15:58:42,583:INFO:Copying training dataset
2023-06-23 15:58:42,588:INFO:Defining folds
2023-06-23 15:58:42,588:INFO:Declaring metric variables
2023-06-23 15:58:42,591:INFO:Importing untrained model
2023-06-23 15:58:42,594:INFO:Decision Tree Regressor Imported successfully
2023-06-23 15:58:42,598:INFO:Starting cross validation
2023-06-23 15:58:42,600:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:43,309:INFO:Calculating mean and std
2023-06-23 15:58:43,310:INFO:Creating metrics dataframe
2023-06-23 15:58:43,388:INFO:Uploading results into container
2023-06-23 15:58:43,389:INFO:Uploading model into container now
2023-06-23 15:58:43,389:INFO:_master_model_container: 12
2023-06-23 15:58:43,389:INFO:_display_container: 2
2023-06-23 15:58:43,389:INFO:DecisionTreeRegressor(random_state=7647)
2023-06-23 15:58:43,389:INFO:create_model() successfully completed......................................
2023-06-23 15:58:43,476:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:43,476:INFO:Creating metrics dataframe
2023-06-23 15:58:43,485:INFO:Initializing Random Forest Regressor
2023-06-23 15:58:43,485:INFO:Total runtime is 0.23140867948532107 minutes
2023-06-23 15:58:43,487:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:43,487:INFO:Initializing create_model()
2023-06-23 15:58:43,487:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:43,487:INFO:Checking exceptions
2023-06-23 15:58:43,487:INFO:Importing libraries
2023-06-23 15:58:43,487:INFO:Copying training dataset
2023-06-23 15:58:43,492:INFO:Defining folds
2023-06-23 15:58:43,492:INFO:Declaring metric variables
2023-06-23 15:58:43,494:INFO:Importing untrained model
2023-06-23 15:58:43,498:INFO:Random Forest Regressor Imported successfully
2023-06-23 15:58:43,502:INFO:Starting cross validation
2023-06-23 15:58:43,503:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:49,495:INFO:Calculating mean and std
2023-06-23 15:58:49,502:INFO:Creating metrics dataframe
2023-06-23 15:58:49,582:INFO:Uploading results into container
2023-06-23 15:58:49,583:INFO:Uploading model into container now
2023-06-23 15:58:49,583:INFO:_master_model_container: 13
2023-06-23 15:58:49,583:INFO:_display_container: 2
2023-06-23 15:58:49,583:INFO:RandomForestRegressor(n_jobs=-1, random_state=7647)
2023-06-23 15:58:49,583:INFO:create_model() successfully completed......................................
2023-06-23 15:58:49,666:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:49,666:INFO:Creating metrics dataframe
2023-06-23 15:58:49,673:INFO:Initializing Extra Trees Regressor
2023-06-23 15:58:49,673:INFO:Total runtime is 0.3345549782117208 minutes
2023-06-23 15:58:49,676:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:49,676:INFO:Initializing create_model()
2023-06-23 15:58:49,676:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:49,676:INFO:Checking exceptions
2023-06-23 15:58:49,676:INFO:Importing libraries
2023-06-23 15:58:49,676:INFO:Copying training dataset
2023-06-23 15:58:49,681:INFO:Defining folds
2023-06-23 15:58:49,681:INFO:Declaring metric variables
2023-06-23 15:58:49,684:INFO:Importing untrained model
2023-06-23 15:58:49,688:INFO:Extra Trees Regressor Imported successfully
2023-06-23 15:58:49,693:INFO:Starting cross validation
2023-06-23 15:58:49,694:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:55,341:INFO:Calculating mean and std
2023-06-23 15:58:55,347:INFO:Creating metrics dataframe
2023-06-23 15:58:55,425:INFO:Uploading results into container
2023-06-23 15:58:55,426:INFO:Uploading model into container now
2023-06-23 15:58:55,426:INFO:_master_model_container: 14
2023-06-23 15:58:55,426:INFO:_display_container: 2
2023-06-23 15:58:55,426:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7647)
2023-06-23 15:58:55,426:INFO:create_model() successfully completed......................................
2023-06-23 15:58:55,510:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:55,510:INFO:Creating metrics dataframe
2023-06-23 15:58:55,519:INFO:Initializing AdaBoost Regressor
2023-06-23 15:58:55,519:INFO:Total runtime is 0.43198692401250205 minutes
2023-06-23 15:58:55,522:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:55,522:INFO:Initializing create_model()
2023-06-23 15:58:55,522:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:55,522:INFO:Checking exceptions
2023-06-23 15:58:55,522:INFO:Importing libraries
2023-06-23 15:58:55,522:INFO:Copying training dataset
2023-06-23 15:58:55,527:INFO:Defining folds
2023-06-23 15:58:55,527:INFO:Declaring metric variables
2023-06-23 15:58:55,530:INFO:Importing untrained model
2023-06-23 15:58:55,532:INFO:AdaBoost Regressor Imported successfully
2023-06-23 15:58:55,539:INFO:Starting cross validation
2023-06-23 15:58:55,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:56,523:INFO:Calculating mean and std
2023-06-23 15:58:56,524:INFO:Creating metrics dataframe
2023-06-23 15:58:56,612:INFO:Uploading results into container
2023-06-23 15:58:56,612:INFO:Uploading model into container now
2023-06-23 15:58:56,613:INFO:_master_model_container: 15
2023-06-23 15:58:56,613:INFO:_display_container: 2
2023-06-23 15:58:56,613:INFO:AdaBoostRegressor(random_state=7647)
2023-06-23 15:58:56,613:INFO:create_model() successfully completed......................................
2023-06-23 15:58:56,709:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:56,710:INFO:Creating metrics dataframe
2023-06-23 15:58:56,721:INFO:Initializing Gradient Boosting Regressor
2023-06-23 15:58:56,721:INFO:Total runtime is 0.4520142356554667 minutes
2023-06-23 15:58:56,724:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:56,725:INFO:Initializing create_model()
2023-06-23 15:58:56,725:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:56,725:INFO:Checking exceptions
2023-06-23 15:58:56,725:INFO:Importing libraries
2023-06-23 15:58:56,725:INFO:Copying training dataset
2023-06-23 15:58:56,731:INFO:Defining folds
2023-06-23 15:58:56,731:INFO:Declaring metric variables
2023-06-23 15:58:56,736:INFO:Importing untrained model
2023-06-23 15:58:56,740:INFO:Gradient Boosting Regressor Imported successfully
2023-06-23 15:58:56,748:INFO:Starting cross validation
2023-06-23 15:58:56,750:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:58:59,324:INFO:Calculating mean and std
2023-06-23 15:58:59,325:INFO:Creating metrics dataframe
2023-06-23 15:58:59,413:INFO:Uploading results into container
2023-06-23 15:58:59,414:INFO:Uploading model into container now
2023-06-23 15:58:59,414:INFO:_master_model_container: 16
2023-06-23 15:58:59,414:INFO:_display_container: 2
2023-06-23 15:58:59,414:INFO:GradientBoostingRegressor(random_state=7647)
2023-06-23 15:58:59,415:INFO:create_model() successfully completed......................................
2023-06-23 15:58:59,500:INFO:SubProcess create_model() end ==================================
2023-06-23 15:58:59,501:INFO:Creating metrics dataframe
2023-06-23 15:58:59,508:INFO:Initializing Extreme Gradient Boosting
2023-06-23 15:58:59,508:INFO:Total runtime is 0.49846984148025514 minutes
2023-06-23 15:58:59,511:INFO:SubProcess create_model() called ==================================
2023-06-23 15:58:59,511:INFO:Initializing create_model()
2023-06-23 15:58:59,511:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:58:59,511:INFO:Checking exceptions
2023-06-23 15:58:59,511:INFO:Importing libraries
2023-06-23 15:58:59,511:INFO:Copying training dataset
2023-06-23 15:58:59,516:INFO:Defining folds
2023-06-23 15:58:59,516:INFO:Declaring metric variables
2023-06-23 15:58:59,519:INFO:Importing untrained model
2023-06-23 15:58:59,529:INFO:Extreme Gradient Boosting Imported successfully
2023-06-23 15:58:59,536:INFO:Starting cross validation
2023-06-23 15:58:59,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:59:03,894:INFO:Calculating mean and std
2023-06-23 15:59:03,895:INFO:Creating metrics dataframe
2023-06-23 15:59:03,978:INFO:Uploading results into container
2023-06-23 15:59:03,979:INFO:Uploading model into container now
2023-06-23 15:59:03,980:INFO:_master_model_container: 17
2023-06-23 15:59:03,980:INFO:_display_container: 2
2023-06-23 15:59:03,980:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             predictor=None, random_state=7647, ...)
2023-06-23 15:59:03,980:INFO:create_model() successfully completed......................................
2023-06-23 15:59:04,064:INFO:SubProcess create_model() end ==================================
2023-06-23 15:59:04,064:INFO:Creating metrics dataframe
2023-06-23 15:59:04,072:INFO:Initializing Light Gradient Boosting Machine
2023-06-23 15:59:04,073:INFO:Total runtime is 0.5745403488477071 minutes
2023-06-23 15:59:04,075:INFO:SubProcess create_model() called ==================================
2023-06-23 15:59:04,075:INFO:Initializing create_model()
2023-06-23 15:59:04,075:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:59:04,075:INFO:Checking exceptions
2023-06-23 15:59:04,075:INFO:Importing libraries
2023-06-23 15:59:04,076:INFO:Copying training dataset
2023-06-23 15:59:04,080:INFO:Defining folds
2023-06-23 15:59:04,080:INFO:Declaring metric variables
2023-06-23 15:59:04,084:INFO:Importing untrained model
2023-06-23 15:59:04,087:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-23 15:59:04,093:INFO:Starting cross validation
2023-06-23 15:59:04,095:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:59:05,187:INFO:Calculating mean and std
2023-06-23 15:59:05,187:INFO:Creating metrics dataframe
2023-06-23 15:59:05,275:INFO:Uploading results into container
2023-06-23 15:59:05,276:INFO:Uploading model into container now
2023-06-23 15:59:05,276:INFO:_master_model_container: 18
2023-06-23 15:59:05,276:INFO:_display_container: 2
2023-06-23 15:59:05,277:INFO:LGBMRegressor(random_state=7647)
2023-06-23 15:59:05,277:INFO:create_model() successfully completed......................................
2023-06-23 15:59:05,364:INFO:SubProcess create_model() end ==================================
2023-06-23 15:59:05,364:INFO:Creating metrics dataframe
2023-06-23 15:59:05,373:INFO:Initializing Dummy Regressor
2023-06-23 15:59:05,373:INFO:Total runtime is 0.5962200800577799 minutes
2023-06-23 15:59:05,377:INFO:SubProcess create_model() called ==================================
2023-06-23 15:59:05,377:INFO:Initializing create_model()
2023-06-23 15:59:05,377:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a6113cca0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:59:05,378:INFO:Checking exceptions
2023-06-23 15:59:05,378:INFO:Importing libraries
2023-06-23 15:59:05,378:INFO:Copying training dataset
2023-06-23 15:59:05,384:INFO:Defining folds
2023-06-23 15:59:05,384:INFO:Declaring metric variables
2023-06-23 15:59:05,386:INFO:Importing untrained model
2023-06-23 15:59:05,389:INFO:Dummy Regressor Imported successfully
2023-06-23 15:59:05,394:INFO:Starting cross validation
2023-06-23 15:59:05,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:59:06,204:INFO:Calculating mean and std
2023-06-23 15:59:06,205:INFO:Creating metrics dataframe
2023-06-23 15:59:06,292:INFO:Uploading results into container
2023-06-23 15:59:06,293:INFO:Uploading model into container now
2023-06-23 15:59:06,293:INFO:_master_model_container: 19
2023-06-23 15:59:06,293:INFO:_display_container: 2
2023-06-23 15:59:06,293:INFO:DummyRegressor()
2023-06-23 15:59:06,293:INFO:create_model() successfully completed......................................
2023-06-23 15:59:06,379:INFO:SubProcess create_model() end ==================================
2023-06-23 15:59:06,379:INFO:Creating metrics dataframe
2023-06-23 15:59:06,400:INFO:Initializing create_model()
2023-06-23 15:59:06,400:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:59:06,400:INFO:Checking exceptions
2023-06-23 15:59:06,402:INFO:Importing libraries
2023-06-23 15:59:06,402:INFO:Copying training dataset
2023-06-23 15:59:06,408:INFO:Defining folds
2023-06-23 15:59:06,408:INFO:Declaring metric variables
2023-06-23 15:59:06,409:INFO:Importing untrained model
2023-06-23 15:59:06,409:INFO:Declaring custom model
2023-06-23 15:59:06,409:INFO:Bayesian Ridge Imported successfully
2023-06-23 15:59:06,411:INFO:Cross validation set to False
2023-06-23 15:59:06,411:INFO:Fitting Model
2023-06-23 15:59:06,679:INFO:BayesianRidge()
2023-06-23 15:59:06,679:INFO:create_model() successfully completed......................................
2023-06-23 15:59:06,786:INFO:_master_model_container: 19
2023-06-23 15:59:06,786:INFO:_display_container: 2
2023-06-23 15:59:06,787:INFO:BayesianRidge()
2023-06-23 15:59:06,787:INFO:compare_models() successfully completed......................................
2023-06-23 15:59:06,866:INFO:Initializing create_model()
2023-06-23 15:59:06,867:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:59:06,867:INFO:Checking exceptions
2023-06-23 15:59:06,884:INFO:Importing libraries
2023-06-23 15:59:06,884:INFO:Copying training dataset
2023-06-23 15:59:06,889:INFO:Defining folds
2023-06-23 15:59:06,890:INFO:Declaring metric variables
2023-06-23 15:59:06,893:INFO:Importing untrained model
2023-06-23 15:59:06,896:INFO:Linear Regression Imported successfully
2023-06-23 15:59:06,904:INFO:Starting cross validation
2023-06-23 15:59:06,906:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:59:07,788:INFO:Calculating mean and std
2023-06-23 15:59:07,788:INFO:Creating metrics dataframe
2023-06-23 15:59:07,792:INFO:Finalizing model
2023-06-23 15:59:08,025:INFO:Uploading results into container
2023-06-23 15:59:08,026:INFO:Uploading model into container now
2023-06-23 15:59:08,038:INFO:_master_model_container: 20
2023-06-23 15:59:08,038:INFO:_display_container: 3
2023-06-23 15:59:08,039:INFO:LinearRegression(n_jobs=-1)
2023-06-23 15:59:08,039:INFO:create_model() successfully completed......................................
2023-06-23 15:59:08,158:INFO:Initializing tune_model()
2023-06-23 15:59:08,158:INFO:tune_model(estimator=LinearRegression(n_jobs=-1), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>)
2023-06-23 15:59:08,158:INFO:Checking exceptions
2023-06-23 15:59:08,173:INFO:Copying training dataset
2023-06-23 15:59:08,179:INFO:Checking base model
2023-06-23 15:59:08,179:INFO:Base model : Linear Regression
2023-06-23 15:59:08,182:INFO:Declaring metric variables
2023-06-23 15:59:08,185:INFO:Defining Hyperparameters
2023-06-23 15:59:08,186:INFO:10 is bigger than total combinations 2, setting search algorithm to grid
2023-06-23 15:59:08,299:INFO:Tuning with n_jobs=-1
2023-06-23 15:59:08,299:INFO:Initializing GridSearchCV
2023-06-23 15:59:09,864:INFO:best_params: {'actual_estimator__fit_intercept': True}
2023-06-23 15:59:09,865:INFO:Hyperparameter search completed
2023-06-23 15:59:09,865:INFO:SubProcess create_model() called ==================================
2023-06-23 15:59:09,866:INFO:Initializing create_model()
2023-06-23 15:59:09,866:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a45e1dfc0>, model_only=True, return_train_score=False, kwargs={'fit_intercept': True})
2023-06-23 15:59:09,866:INFO:Checking exceptions
2023-06-23 15:59:09,866:INFO:Importing libraries
2023-06-23 15:59:09,866:INFO:Copying training dataset
2023-06-23 15:59:09,870:INFO:Defining folds
2023-06-23 15:59:09,871:INFO:Declaring metric variables
2023-06-23 15:59:09,873:INFO:Importing untrained model
2023-06-23 15:59:09,873:INFO:Declaring custom model
2023-06-23 15:59:09,875:INFO:Linear Regression Imported successfully
2023-06-23 15:59:09,879:INFO:Starting cross validation
2023-06-23 15:59:09,880:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:59:10,636:INFO:Calculating mean and std
2023-06-23 15:59:10,637:INFO:Creating metrics dataframe
2023-06-23 15:59:10,641:INFO:Finalizing model
2023-06-23 15:59:10,855:INFO:Uploading results into container
2023-06-23 15:59:10,858:INFO:Uploading model into container now
2023-06-23 15:59:10,858:INFO:_master_model_container: 21
2023-06-23 15:59:10,859:INFO:_display_container: 4
2023-06-23 15:59:10,859:INFO:LinearRegression(n_jobs=-1)
2023-06-23 15:59:10,859:INFO:create_model() successfully completed......................................
2023-06-23 15:59:10,960:INFO:SubProcess create_model() end ==================================
2023-06-23 15:59:10,960:INFO:choose_better activated
2023-06-23 15:59:10,962:INFO:SubProcess create_model() called ==================================
2023-06-23 15:59:10,963:INFO:Initializing create_model()
2023-06-23 15:59:10,963:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 15:59:10,963:INFO:Checking exceptions
2023-06-23 15:59:10,964:INFO:Importing libraries
2023-06-23 15:59:10,964:INFO:Copying training dataset
2023-06-23 15:59:10,969:INFO:Defining folds
2023-06-23 15:59:10,969:INFO:Declaring metric variables
2023-06-23 15:59:10,969:INFO:Importing untrained model
2023-06-23 15:59:10,969:INFO:Declaring custom model
2023-06-23 15:59:10,969:INFO:Linear Regression Imported successfully
2023-06-23 15:59:10,969:INFO:Starting cross validation
2023-06-23 15:59:10,970:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 15:59:11,744:INFO:Calculating mean and std
2023-06-23 15:59:11,744:INFO:Creating metrics dataframe
2023-06-23 15:59:11,746:INFO:Finalizing model
2023-06-23 15:59:11,966:INFO:Uploading results into container
2023-06-23 15:59:11,967:INFO:Uploading model into container now
2023-06-23 15:59:11,967:INFO:_master_model_container: 22
2023-06-23 15:59:11,968:INFO:_display_container: 5
2023-06-23 15:59:11,968:INFO:LinearRegression(n_jobs=-1)
2023-06-23 15:59:11,968:INFO:create_model() successfully completed......................................
2023-06-23 15:59:12,068:INFO:SubProcess create_model() end ==================================
2023-06-23 15:59:12,068:INFO:LinearRegression(n_jobs=-1) result for R2 is 0.2681
2023-06-23 15:59:12,069:INFO:LinearRegression(n_jobs=-1) result for R2 is 0.2681
2023-06-23 15:59:12,069:INFO:LinearRegression(n_jobs=-1) is best model
2023-06-23 15:59:12,069:INFO:choose_better completed
2023-06-23 15:59:12,069:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-23 15:59:12,077:INFO:_master_model_container: 22
2023-06-23 15:59:12,077:INFO:_display_container: 4
2023-06-23 15:59:12,077:INFO:LinearRegression(n_jobs=-1)
2023-06-23 15:59:12,077:INFO:tune_model() successfully completed......................................
2023-06-23 15:59:12,210:INFO:Initializing evaluate_model()
2023-06-23 15:59:12,210:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=LinearRegression(n_jobs=-1), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-23 15:59:12,220:INFO:Initializing plot_model()
2023-06-23 15:59:12,220:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, system=True)
2023-06-23 15:59:12,220:INFO:Checking exceptions
2023-06-23 15:59:12,224:INFO:Preloading libraries
2023-06-23 15:59:12,224:INFO:Copying training dataset
2023-06-23 15:59:12,224:INFO:Plot type: pipeline
2023-06-23 15:59:12,350:INFO:Visual Rendered Successfully
2023-06-23 15:59:12,444:INFO:plot_model() successfully completed......................................
2023-06-23 15:59:12,466:INFO:Initializing predict_model()
2023-06-23 15:59:12,467:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f3a2424bd00>)
2023-06-23 15:59:12,467:INFO:Checking exceptions
2023-06-23 15:59:12,467:INFO:Preloading libraries
2023-06-23 15:59:12,744:INFO:Initializing finalize_model()
2023-06-23 15:59:12,745:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-06-23 15:59:12,745:INFO:Finalizing LinearRegression(n_jobs=-1)
2023-06-23 15:59:12,749:INFO:Initializing create_model()
2023-06-23 15:59:12,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3a27764bb0>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-06-23 15:59:12,749:INFO:Checking exceptions
2023-06-23 15:59:12,751:INFO:Importing libraries
2023-06-23 15:59:12,751:INFO:Copying training dataset
2023-06-23 15:59:12,751:INFO:Defining folds
2023-06-23 15:59:12,752:INFO:Declaring metric variables
2023-06-23 15:59:12,752:INFO:Importing untrained model
2023-06-23 15:59:12,752:INFO:Declaring custom model
2023-06-23 15:59:12,752:INFO:Linear Regression Imported successfully
2023-06-23 15:59:12,753:INFO:Cross validation set to False
2023-06-23 15:59:12,753:INFO:Fitting Model
2023-06-23 15:59:12,921:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2023-06-23 15:59:12,922:INFO:create_model() successfully completed......................................
2023-06-23 15:59:13,035:INFO:_master_model_container: 22
2023-06-23 15:59:13,035:INFO:_display_container: 5
2023-06-23 15:59:13,043:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2023-06-23 15:59:13,043:INFO:finalize_model() successfully completed......................................
2023-06-23 15:59:13,152:INFO:Initializing save_model()
2023-06-23 15:59:13,152:INFO:save_model(model=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), model_name=ml_airbnb, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-06-23 15:59:13,152:INFO:Adding model into prep_pipe
2023-06-23 15:59:13,152:WARNING:Only Model saved as it was a pipeline.
2023-06-23 15:59:13,162:INFO:ml_airbnb.pkl saved in current working directory
2023-06-23 15:59:13,169:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2023-06-23 15:59:13,169:INFO:save_model() successfully completed......................................
2023-06-23 16:04:24,621:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 16:04:24,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 16:04:24,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 16:04:24,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 16:04:25,049:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-23 16:04:25,180:INFO:Initializing load_model()
2023-06-23 16:04:25,180:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:04:29,438:INFO:Initializing load_model()
2023-06-23 16:04:29,438:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:04:30,710:INFO:Initializing load_model()
2023-06-23 16:04:30,710:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:04:31,392:INFO:Initializing load_model()
2023-06-23 16:04:31,392:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:04:31,978:INFO:Initializing load_model()
2023-06-23 16:04:31,978:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:04:32,765:INFO:Initializing load_model()
2023-06-23 16:04:32,765:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:04:33,517:INFO:Initializing load_model()
2023-06-23 16:04:33,517:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:04:34,202:INFO:Initializing load_model()
2023-06-23 16:04:34,202:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:04:35,039:INFO:Initializing load_model()
2023-06-23 16:04:35,039:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:04:35,449:INFO:Initializing load_model()
2023-06-23 16:04:35,450:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:04:36,147:INFO:Initializing load_model()
2023-06-23 16:04:36,147:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:04:36,583:INFO:Initializing load_model()
2023-06-23 16:04:36,584:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:04:37,328:INFO:Initializing load_model()
2023-06-23 16:04:37,329:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:04:37,350:INFO:Initializing predict_model()
2023-06-23 16:04:37,350:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f63820fd0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f7f637b3640>)
2023-06-23 16:04:37,350:INFO:Checking exceptions
2023-06-23 16:04:37,350:INFO:Preloading libraries
2023-06-23 16:04:37,351:INFO:Set up data.
2023-06-23 16:04:37,355:INFO:Set up index.
2023-06-23 16:08:03,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 16:08:03,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 16:08:03,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 16:08:03,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 16:08:03,395:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-23 16:08:03,493:INFO:Initializing load_model()
2023-06-23 16:08:03,493:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:08:12,343:INFO:Initializing load_model()
2023-06-23 16:08:12,343:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:08:12,360:INFO:Initializing predict_model()
2023-06-23 16:08:12,361:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fb0286c5810>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fb0286ec4c0>)
2023-06-23 16:08:12,361:INFO:Checking exceptions
2023-06-23 16:08:12,362:INFO:Preloading libraries
2023-06-23 16:08:12,362:INFO:Set up data.
2023-06-23 16:08:12,367:INFO:Set up index.
2023-06-23 16:08:35,839:INFO:Initializing load_model()
2023-06-23 16:08:35,839:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:08:38,242:INFO:Initializing load_model()
2023-06-23 16:08:38,243:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:08:38,257:INFO:Initializing predict_model()
2023-06-23 16:08:38,257:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fb028217970>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fb028281fc0>)
2023-06-23 16:08:38,257:INFO:Checking exceptions
2023-06-23 16:08:38,257:INFO:Preloading libraries
2023-06-23 16:08:38,258:INFO:Set up data.
2023-06-23 16:08:38,262:INFO:Set up index.
2023-06-23 16:08:49,824:INFO:Initializing load_model()
2023-06-23 16:08:49,824:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:08:51,878:INFO:Initializing load_model()
2023-06-23 16:08:51,879:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:08:51,894:INFO:Initializing predict_model()
2023-06-23 16:08:51,894:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fb071bb2650>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fb02800b490>)
2023-06-23 16:08:51,894:INFO:Checking exceptions
2023-06-23 16:08:51,895:INFO:Preloading libraries
2023-06-23 16:08:51,895:INFO:Set up data.
2023-06-23 16:08:51,898:INFO:Set up index.
2023-06-23 16:09:39,047:INFO:Initializing load_model()
2023-06-23 16:09:39,047:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:09:41,061:INFO:Initializing load_model()
2023-06-23 16:09:41,061:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:09:41,078:INFO:Initializing predict_model()
2023-06-23 16:09:41,078:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fb0719e9ba0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fb071a08c10>)
2023-06-23 16:09:41,079:INFO:Checking exceptions
2023-06-23 16:09:41,080:INFO:Preloading libraries
2023-06-23 16:09:41,080:INFO:Set up data.
2023-06-23 16:09:41,083:INFO:Set up index.
2023-06-23 16:10:26,076:INFO:Initializing load_model()
2023-06-23 16:10:26,076:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:10:27,578:INFO:Initializing load_model()
2023-06-23 16:10:27,578:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:10:27,596:INFO:Initializing predict_model()
2023-06-23 16:10:27,596:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fb0280615a0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fb028282170>)
2023-06-23 16:10:27,596:INFO:Checking exceptions
2023-06-23 16:10:27,597:INFO:Preloading libraries
2023-06-23 16:10:27,597:INFO:Set up data.
2023-06-23 16:10:27,601:INFO:Set up index.
2023-06-23 16:11:36,062:INFO:Initializing load_model()
2023-06-23 16:11:36,062:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:11:37,677:INFO:Initializing load_model()
2023-06-23 16:11:37,677:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:11:37,692:INFO:Initializing predict_model()
2023-06-23 16:11:37,692:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fb0280628c0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fb027f59000>)
2023-06-23 16:11:37,692:INFO:Checking exceptions
2023-06-23 16:11:37,693:INFO:Preloading libraries
2023-06-23 16:11:37,693:INFO:Set up data.
2023-06-23 16:11:37,696:INFO:Set up index.
2023-06-23 16:12:04,556:INFO:Initializing load_model()
2023-06-23 16:12:04,557:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:12:06,304:INFO:Initializing load_model()
2023-06-23 16:12:06,304:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:12:06,319:INFO:Initializing predict_model()
2023-06-23 16:12:06,319:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fb0280610f0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fb027f59480>)
2023-06-23 16:12:06,319:INFO:Checking exceptions
2023-06-23 16:12:06,319:INFO:Preloading libraries
2023-06-23 16:12:06,320:INFO:Set up data.
2023-06-23 16:12:06,323:INFO:Set up index.
2023-06-23 16:12:39,398:INFO:Initializing load_model()
2023-06-23 16:12:39,398:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:12:43,516:INFO:Initializing load_model()
2023-06-23 16:12:43,516:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:12:45,225:INFO:Initializing load_model()
2023-06-23 16:12:45,226:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:12:46,868:INFO:Initializing load_model()
2023-06-23 16:12:46,868:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:12:48,639:INFO:Initializing load_model()
2023-06-23 16:12:48,639:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:12:50,732:INFO:Initializing load_model()
2023-06-23 16:12:50,732:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:12:54,424:INFO:Initializing load_model()
2023-06-23 16:12:54,424:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:12:55,677:INFO:Initializing load_model()
2023-06-23 16:12:55,677:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:12:55,690:INFO:Initializing predict_model()
2023-06-23 16:12:55,690:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fb028214400>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fb071a088b0>)
2023-06-23 16:12:55,690:INFO:Checking exceptions
2023-06-23 16:12:55,690:INFO:Preloading libraries
2023-06-23 16:12:55,691:INFO:Set up data.
2023-06-23 16:12:55,693:INFO:Set up index.
2023-06-23 16:13:58,685:INFO:Initializing load_model()
2023-06-23 16:13:58,685:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:14:00,654:INFO:Initializing load_model()
2023-06-23 16:14:00,654:INFO:load_model(model_name=ml_airbnb, platform=None, authentication=None, verbose=True)
2023-06-23 16:14:00,668:INFO:Initializing predict_model()
2023-06-23 16:14:00,668:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fb0283549d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['accommodates', 'maximum_nights',
                                             'minimum_nights'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'property_type',
                                             'room_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encodi...
                 TransformerWrapper(include=['neighbourhood', 'room_type'],
                                    transformer=OneHotEncoder(cols=['neighbourhood',
                                                                    'room_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['property_type'],
                                    transformer=TargetEncoder(cols=['property_type'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fb027f59d80>)
2023-06-23 16:14:00,668:INFO:Checking exceptions
2023-06-23 16:14:00,668:INFO:Preloading libraries
2023-06-23 16:14:00,669:INFO:Set up data.
2023-06-23 16:14:00,672:INFO:Set up index.
